<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1Class" kind="class" language="C++" prot="public" final="yes">
    <compoundname>dakku::Class</compoundname>
    <includes refid="class_8h" local="no">class.h</includes>
    <innerclass refid="structdakku_1_1Class_1_1Metadata" prot="private">dakku::Class::Metadata</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdakku_1_1Class_1a5ca387aebcee4d1363ac17e25749098a" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, Metadata, std::less&lt;&gt; &gt;</type>
        <definition>std::map&lt;std::string, Metadata, std::less&lt;&gt; &gt; dakku::Class::_classMap</definition>
        <argsstring></argsstring>
        <name>_classMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="60" column="12" bodyfile="src/core/class.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdakku_1_1Class_1a38f609682794eb8644448c458c9679cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdakku_1_1Class" kindref="compound">Class</ref> &amp;</type>
        <definition>static Class &amp; dakku::Class::instance</definition>
        <argsstring>()</argsstring>
        <name>instance</name>
        <briefdescription>
<para>get the class instance (singleton) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="22" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1Class_1abfdf06dcdc49b01551130b41358cb93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ObjectType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::Class::registerClass</definition>
        <argsstring>()</argsstring>
        <name>registerClass</name>
        <briefdescription>
<para>register an object class </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>object type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="30" column="8" bodyfile="src/core/class.h" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Class_1a09814cebf82067a31d3a25bcc7afe28a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Class::isDerivedFrom</definition>
        <argsstring>(std::string_view cur, std::string_view from) const</argsstring>
        <name>isDerivedFrom</name>
        <param>
          <type>std::string_view</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>check whether <computeroutput>cur</computeroutput> dervies from <computeroutput>from</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Class_1af4dcc1c45a0cc7ffed866abe23c55440" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Class::contains</definition>
        <argsstring>(std::string_view name) const</argsstring>
        <name>contains</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>check whether <computeroutput>name</computeroutput> is registered </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="43" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdakku_1_1Class_1af64deeeb68dfef5d6d4db8401df6281b" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Class::Class</definition>
        <argsstring>()=default</argsstring>
        <name>Class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="46" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdakku_1_1Class_1a21fa567936b0130c57ebf47c3f143ef6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Object" kindref="compound">Object</ref> *</type>
        <definition>Object * dakku::Class::constructor</definition>
        <argsstring>()</argsstring>
        <name>constructor</name>
        <briefdescription>
<para>constructor helper </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/class.h" line="53" column="17" bodyfile="src/core/class.h" bodystart="76" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RTTI support. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/class.h" line="15" column="1" bodyfile="src/core/class.h" bodystart="15" bodyend="61"/>
    <listofallmembers>
      <member refid="classdakku_1_1Class_1a5ca387aebcee4d1363ac17e25749098a" prot="private" virt="non-virtual"><scope>dakku::Class</scope><name>_classMap</name></member>
      <member refid="classdakku_1_1Class_1af64deeeb68dfef5d6d4db8401df6281b" prot="private" virt="non-virtual"><scope>dakku::Class</scope><name>Class</name></member>
      <member refid="classdakku_1_1Class_1a21fa567936b0130c57ebf47c3f143ef6" prot="private" virt="non-virtual"><scope>dakku::Class</scope><name>constructor</name></member>
      <member refid="classdakku_1_1Class_1af4dcc1c45a0cc7ffed866abe23c55440" prot="public" virt="non-virtual"><scope>dakku::Class</scope><name>contains</name></member>
      <member refid="classdakku_1_1Class_1a38f609682794eb8644448c458c9679cb" prot="public" virt="non-virtual"><scope>dakku::Class</scope><name>instance</name></member>
      <member refid="classdakku_1_1Class_1a09814cebf82067a31d3a25bcc7afe28a" prot="public" virt="non-virtual"><scope>dakku::Class</scope><name>isDerivedFrom</name></member>
      <member refid="classdakku_1_1Class_1abfdf06dcdc49b01551130b41358cb93d" prot="public" virt="non-virtual"><scope>dakku::Class</scope><name>registerClass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
