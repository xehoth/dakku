<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1VectorNegateExpression" kind="class" language="C++" prot="public">
    <compoundname>dakku::VectorNegateExpression</compoundname>
    <basecompoundref refid="classdakku_1_1UnaryVectorExpression" prot="public" virt="non-virtual">dakku::UnaryVectorExpression&lt; T, S, D, E, VectorNegateExpression&lt; T, S, D, E &gt; &gt;</basecompoundref>
    <includes refid="vector__base_8h" local="no">vector_base.h</includes>
    <templateparamlist>
      <param>
        <type>ArithmeticType</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>S</declname>
        <defname>S</defname>
      </param>
      <param>
        <type>typename D</type>
      </param>
      <param>
        <type>typename E</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1VectorNegateExpression_1a2528e069b8f8285d67b56adf3074cee5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::VectorNegateExpression&lt; T, S, D, E &gt;::get</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>get</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/math/vector_base.h" line="496" column="12" bodyfile="src/math/vector_base.h" bodystart="496" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>negate the vector </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para>derived type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>expr </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dakku::UnaryVectorExpression&lt; T, S, D, E, VectorNegateExpression&lt; T, S, D, E &gt; &gt;</label>
        <link refid="classdakku_1_1UnaryVectorExpression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dakku::VectorExpression&lt; T, S, Derived, Expr &gt;</label>
        <link refid="structdakku_1_1VectorExpression"/>
      </node>
      <node id="1">
        <label>dakku::VectorNegateExpression&lt; T, S, D, E &gt;</label>
        <link refid="classdakku_1_1VectorNegateExpression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dakku::UnaryVectorExpression&lt; T, S, D, E, VectorNegateExpression&lt; T, S, D, E &gt; &gt;</label>
        <link refid="classdakku_1_1UnaryVectorExpression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dakku::VectorExpression&lt; T, S, Derived, Expr &gt;</label>
        <link refid="structdakku_1_1VectorExpression"/>
      </node>
      <node id="1">
        <label>dakku::VectorNegateExpression&lt; T, S, D, E &gt;</label>
        <link refid="classdakku_1_1VectorNegateExpression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/math/vector_base.h" line="489" column="1" bodyfile="src/math/vector_base.h" bodystart="491" bodyend="497"/>
    <listofallmembers>
      <member refid="classdakku_1_1UnaryVectorExpression_1a2b3dc6dda82a4d8aaa555ab50fd876ff" prot="protected" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>e</name></member>
      <member refid="classdakku_1_1VectorNegateExpression_1a2528e069b8f8285d67b56adf3074cee5" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>get</name></member>
      <member refid="structdakku_1_1VectorExpression_1aa6bb9e06a874dc4d2d53e7afeab2d776" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>getExpression</name></member>
      <member refid="structdakku_1_1VectorExpression_1a7c820895f26d8747183a52f908912ba8" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>getExpression</name></member>
      <member refid="structdakku_1_1VectorExpression_1a134ba684029ca2e266660634597cdaa6" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>operator[]</name></member>
      <member refid="structdakku_1_1VectorExpression_1a65239ca3cdad0963bd8364c9bf4c51f8" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>operator[]</name></member>
      <member refid="classdakku_1_1UnaryVectorExpression_1a2d9dab98b5cd2c5d824a716a1f20c84a" prot="public" virt="non-virtual"><scope>dakku::VectorNegateExpression</scope><name>UnaryVectorExpression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
