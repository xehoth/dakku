<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mipmap_8h" kind="file" language="C++">
    <compoundname>mipmap.h</compoundname>
    <includes refid="blocked__array_8h" local="no">core/blocked_array.h</includes>
    <includes refid="vector_8h" local="no">core/vector.h</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="2">
        <label>core/blocked_array.h</label>
        <link refid="blocked__array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/fwd.h</label>
        <link refid="core_2fwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/mipmap.h</label>
        <link refid="mipmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="7">
        <label>numbers</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="9">
        <label>span</label>
      </node>
      <node id="14">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdakku_1_1ResampleWeight" prot="public">dakku::ResampleWeight</innerclass>
    <innerclass refid="classdakku_1_1MipMap" prot="public">dakku::MipMap</innerclass>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedakku_1ad67fc67650e8ff59c3b25b9e9d462ee4" refkind="member"><highlight class="preprocessor">#ifndef<sp/>DAKKU_CORE_MIPMAP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_CORE_MIPMAP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="blocked__array_8h" kindref="compound">core/blocked_array.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector_8h" kindref="compound">core/vector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" kindref="member">ImageWrapMode</ref><sp/>{<sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dca5be68175be14dfaa080165456c2e9555" kindref="member">REPEAT</ref>,<sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dca08d0012388564e95c3b4a7407cf04965" kindref="member">BLACK</ref>,<sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dcaecf301fe86e23bb2bf5155bbef3b1345" kindref="member">CLAMP</ref><sp/>};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structdakku_1_1ResampleWeight" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdakku_1_1ResampleWeight" kindref="compound">ResampleWeight</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="structdakku_1_1ResampleWeight_1abc89fe6d4568cfb82e062d82898fca6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1ResampleWeight_1abc89fe6d4568cfb82e062d82898fca6f" kindref="member">firstTexel</ref>;</highlight></codeline>
<codeline lineno="24" refid="structdakku_1_1ResampleWeight_1abe9d0c7de12b36bd2f0ac68e490cd6aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1ResampleWeight_1abe9d0c7de12b36bd2f0ac68e490cd6aa" kindref="member">weight</ref>[4];</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="33" refid="classdakku_1_1MipMap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(std::is_same_v&lt;T,<sp/>float&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>Spectrum&gt;)<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1MipMap" kindref="compound">MipMap</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classdakku_1_1MipMap_1ad450a8b3b03fffeb74ff96856bcb0b4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1MipMap_1ad450a8b3b03fffeb74ff96856bcb0b4f" kindref="member">MipMap</ref>(<ref refid="classdakku_1_1Point" kindref="compound">Point2i</ref><sp/>resolution,<sp/>std::span&lt;const<sp/>T&gt;<sp/>data,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" kindref="member">doTrilinear</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" kindref="member">maxAnisotropy</ref><sp/>=<sp/>8.0f,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" kindref="member">ImageWrapMode</ref><sp/><ref refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" kindref="member">wrapMode</ref><sp/>=<sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dca5be68175be14dfaa080165456c2e9555" kindref="member">ImageWrapMode::REPEAT</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classdakku_1_1MipMap_1a6b6aaee191275ccfb13805dc1759d819" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1MipMap_1a6b6aaee191275ccfb13805dc1759d819" kindref="member">width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolution.x();<sp/>}</highlight></codeline>
<codeline lineno="40" refid="classdakku_1_1MipMap_1a4134445335c6d3badf60022c7b7efb7c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1MipMap_1a4134445335c6d3badf60022c7b7efb7c" kindref="member">height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolution.y();<sp/>}</highlight></codeline>
<codeline lineno="41" refid="classdakku_1_1MipMap_1a1bdc88cec0a68524a7fd14ccc8f1c6bf" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1MipMap_1a1bdc88cec0a68524a7fd14ccc8f1c6bf" kindref="member">levels</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pyramid.size();<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" kindref="member">doTrilinear</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" kindref="member">maxAnisotropy</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" kindref="member">ImageWrapMode</ref><sp/><ref refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" kindref="member">wrapMode</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2i</ref><sp/>resolution;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;BlockedArray&lt;T&gt;&gt;&gt;<sp/>pyramid;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(std::is_same_v&lt;T,<sp/>float&gt;<sp/>||</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;T,<sp/>Spectrum&gt;)<sp/><ref refid="classdakku_1_1MipMap_1ad450a8b3b03fffeb74ff96856bcb0b4f" kindref="member">MipMap&lt;T&gt;::MipMap</ref>(<ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref><sp/>resolution,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::span&lt;const<sp/>T&gt;<sp/>data,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" kindref="member">doTrilinear</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" kindref="member">maxAnisotropy</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" kindref="member">ImageWrapMode</ref><sp/><ref refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" kindref="member">wrapMode</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>resolution(std::move(resolution)),</highlight></codeline>
<codeline lineno="64" refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" kindref="member">doTrilinear</ref>(<ref refid="namespacedakku_1a1fd20fa9b44a1620a3ce2a133f53d83d" kindref="member">doTrilinear</ref>),</highlight></codeline>
<codeline lineno="65" refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" kindref="member">maxAnisotropy</ref>(<ref refid="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" kindref="member">maxAnisotropy</ref>),</highlight></codeline>
<codeline lineno="66" refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" kindref="member">wrapMode</ref>(<ref refid="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" kindref="member">wrapMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>finish<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/mipmap.h"/>
  </compounddef>
</doxygen>
