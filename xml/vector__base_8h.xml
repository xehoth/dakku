<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="vector__base_8h" kind="file" language="C++">
    <compoundname>vector_base.h</compoundname>
    <includes refid="logger_8h" local="no">core/logger.h</includes>
    <includes local="no">array</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">ostream</includes>
    <includedby refid="vector_8h" local="no">src/core/vector.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>core/fwd.h</label>
        <link refid="fwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="7">
        <label>numbers</label>
      </node>
      <node id="15">
        <label>ostream</label>
      </node>
      <node id="10">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="9">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/core/vector.h</label>
        <link refid="vector_8h"/>
      </node>
      <node id="1">
        <label>src/core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdakku_1_1VectorBase" prot="public">dakku::VectorBase</innerclass>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_MATH_VECTOR_BASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_MATH_VECTOR_BASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="logger_8h" kindref="compound">core/logger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="19" refid="classdakku_1_1VectorBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="classdakku_1_1VectorBase_1acae6683bc17650d9ff87aafa8cfb6b18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1acae6683bc17650d9ff87aafa8cfb6b18" kindref="member">VectorBase</ref>()<sp/>:<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>Arg&gt;</highlight></codeline>
<codeline lineno="36" refid="classdakku_1_1VectorBase_1aee90251abb9484a6886f76d79091b96e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1aee90251abb9484a6886f76d79091b96e" kindref="member">VectorBase</ref>(Arg<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" kindref="member">set</ref>(value);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>Other,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OtherDerived&gt;</highlight></codeline>
<codeline lineno="50" refid="classdakku_1_1VectorBase_1a3992f122fe320723d8a2b08aa0f0b658" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a3992f122fe320723d8a2b08aa0f0b658" kindref="member">VectorBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase&lt;Other, S, OtherDerived&gt;</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" kindref="member">set</ref>(other);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classdakku_1_1VectorBase_1acb37abb2d3484b94e77ce4db959e4aa5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1VectorBase_1acb37abb2d3484b94e77ce4db959e4aa5" kindref="member">VectorBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;other)<sp/>:<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>(other.<ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58" refid="classdakku_1_1VectorBase_1a707acaad663a7d8c53b0f31db60ad21f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1VectorBase_1a707acaad663a7d8c53b0f31db60ad21f" kindref="member">VectorBase</ref>(<ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>:<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>(std::move(other._data))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61" refid="classdakku_1_1VectorBase_1afe4959c7c80f7ae0297325ca971cc97a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;<ref refid="classdakku_1_1VectorBase_1afe4959c7c80f7ae0297325ca971cc97a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;other)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref><sp/>=<sp/>other.<ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67" refid="classdakku_1_1VectorBase_1a9a1f1574000785aa4037f604a4fa21e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a9a1f1574000785aa4037f604a4fa21e2" kindref="member">operator=</ref>(<ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;other)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref><sp/>=<sp/>std::move(other._data);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(!<ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="conceptdakku_1_1ArithmeticType" kindref="compound">ArithmeticType</ref>...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="81" refid="classdakku_1_1VectorBase_1ae369ed90f69f60064f053c5846820c6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>==<sp/>S)<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1ae369ed90f69f60064f053c5846820c6b" kindref="member">VectorBase</ref>(Args<sp/>&amp;&amp;...args)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" kindref="member">set</ref>(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>Arg&gt;</highlight></codeline>
<codeline lineno="92" refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" kindref="member">set</ref>(Arg<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>.fill(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>Arg&gt;</highlight></codeline>
<codeline lineno="104" refid="classdakku_1_1VectorBase_1aa040165f6c4711d6ac753670e76e868e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1aa040165f6c4711d6ac753670e76e868e" kindref="member">setByIndex</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/>Arg<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(0<sp/>&lt;=<sp/>index<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>S,<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>range:<sp/>{}<sp/>&gt;=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>index,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[index]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="conceptdakku_1_1ArithmeticType" kindref="compound">ArithmeticType</ref>...<sp/>Args,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="118" refid="classdakku_1_1VectorBase_1a47ce308974d85dac95130bc829603e52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>==<sp/>S)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a47ce308974d85dac95130bc829603e52" kindref="member">set</ref>(std::index_sequence&lt;Is...&gt;,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args<sp/>&amp;&amp;...args)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classdakku_1_1VectorBase_1aa040165f6c4711d6ac753670e76e868e" kindref="member">setByIndex</ref>(Is,<sp/>std::forward&lt;Args&gt;(args)),<sp/>...);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<ref refid="conceptdakku_1_1ArithmeticType" kindref="compound">ArithmeticType</ref>...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="130" refid="classdakku_1_1VectorBase_1a9ff0cd03971a94292507a01ba8852557" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args)<sp/>==<sp/>S)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a9ff0cd03971a94292507a01ba8852557" kindref="member">set</ref>(Args<sp/>&amp;&amp;...args)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1VectorBase_1a21d3d5772ff3cf0e424968a63557ddb4" kindref="member">set</ref>(std::index_sequence_for&lt;Args...&gt;{},<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>Other,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OtherDerived&gt;</highlight></codeline>
<codeline lineno="142" refid="classdakku_1_1VectorBase_1a490cefc87b4becdd6a938140e2f8e533" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a490cefc87b4becdd6a938140e2f8e533" kindref="member">set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase&lt;Other, S, OtherDerived&gt;</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/>_data[i]<sp/>=<sp/>static_cast&lt;T&gt;(rhs[i]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a24b199ecb70deba0853e9532b888a183" kindref="member">hasNaNs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::any_of(std::begin(<ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>),<sp/>std::end(<ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](T<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1af754e4967f947036a0c31c0dbb4bf6e1" kindref="member">isNaN</ref>(x);<sp/>});</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classdakku_1_1VectorBase_1ae498067d7973072d02c9417b8b677e83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ae498067d7973072d02c9417b8b677e83" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classdakku_1_1VectorBase_1ad762f525bce13332abbd4b9157287ecd" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/><ref refid="classdakku_1_1VectorBase_1ad762f525bce13332abbd4b9157287ecd" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ret{</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>std::to_string(<ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>!=<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>.size())<sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classdakku_1_1VectorBase_1a531ed133257631916fc3384392b2ab7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a531ed133257631916fc3384392b2ab7f" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>vec.<ref refid="classdakku_1_1VectorBase_1ad762f525bce13332abbd4b9157287ecd" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classdakku_1_1VectorBase_1acc8e8a5aa7749125a4f6aa11b92f9dae" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1acc8e8a5aa7749125a4f6aa11b92f9dae" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classdakku_1_1VectorBase_1ada05b4cd2b9838400f490961dc3ac825" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ada05b4cd2b9838400f490961dc3ac825" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classdakku_1_1VectorBase_1a619efcd85e3a91770ccae7f80031e55e" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a619efcd85e3a91770ccae7f80031e55e" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[i]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classdakku_1_1VectorBase_1a838ade15abc3b13923aa49d191c1b796" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a838ade15abc3b13923aa49d191c1b796" kindref="member">operator-</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/>ret[i]<sp/>=<sp/>-ret[i];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">Derived<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classdakku_1_1VectorBase_1abb0f3e3fa71aaf063c3a5a6002fcbf1f" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1abb0f3e3fa71aaf063c3a5a6002fcbf1f" kindref="member">derived</ref>()<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Derived<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classdakku_1_1VectorBase_1ae64bc6bd658a94d08f3b407fcb0e7fba" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ae64bc6bd658a94d08f3b407fcb0e7fba" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>+=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>V&gt;</highlight></codeline>
<codeline lineno="259" refid="classdakku_1_1VectorBase_1a3351845012fbb55d54623d8af9c44a79" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a3351845012fbb55d54623d8af9c44a79" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classdakku_1_1VectorBase_1a6a604c24b1049ff1e9c3c12e9a26fff9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a6a604c24b1049ff1e9c3c12e9a26fff9" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="285" refid="classdakku_1_1VectorBase_1aaeb63fd4c52bae59b7e867829e8b1025" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1aaeb63fd4c52bae59b7e867829e8b1025" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="299" refid="classdakku_1_1VectorBase_1a5de1f00d31ab772c98c21a49c30dc9f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a5de1f00d31ab772c98c21a49c30dc9f8" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>+<sp/>a;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="classdakku_1_1VectorBase_1ad6e6b4c4275de701f79d952ed56fe9ff" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ad6e6b4c4275de701f79d952ed56fe9ff" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>-=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>V&gt;</highlight></codeline>
<codeline lineno="321" refid="classdakku_1_1VectorBase_1a846dad82a5cd66baba195846d3da7c9d" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a846dad82a5cd66baba195846d3da7c9d" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="334" refid="classdakku_1_1VectorBase_1a6a6648d452714192c0f8183c3dbfa55f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a6a6648d452714192c0f8183c3dbfa55f" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="348" refid="classdakku_1_1VectorBase_1ae0aaf7fd6e1e306948150d83050aff99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1ae0aaf7fd6e1e306948150d83050aff99" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>-b;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>a;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classdakku_1_1VectorBase_1a5353b2617ac5343efeee0f325632d772" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1a5353b2617ac5343efeee0f325632d772" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>*=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>V&gt;</highlight></codeline>
<codeline lineno="372" refid="classdakku_1_1VectorBase_1ad4136ad736840507f9fc902d9d6c6dfd" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ad4136ad736840507f9fc902d9d6c6dfd" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="classdakku_1_1VectorBase_1a0c6afadb59bcfa664f49854936d20346" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a0c6afadb59bcfa664f49854936d20346" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="398" refid="classdakku_1_1VectorBase_1ad0aaef0a09d0762e9337d9646ef5fa21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1ad0aaef0a09d0762e9337d9646ef5fa21" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="412" refid="classdakku_1_1VectorBase_1a0cad9fc72b0af9e62bcdfa8867e72568" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1a0cad9fc72b0af9e62bcdfa8867e72568" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classdakku_1_1VectorBase_1add8d1fe3254c662f2c6bfc6beb541c9e" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1add8d1fe3254c662f2c6bfc6beb541c9e" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>S;<sp/>++i)<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>[i]<sp/>/=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>V&gt;</highlight></codeline>
<codeline lineno="434" refid="classdakku_1_1VectorBase_1ad5b06200c617ca92964ad3d81787848f" refkind="member"><highlight class="normal"><sp/><sp/>Derived<sp/>&amp;<ref refid="classdakku_1_1VectorBase_1ad5b06200c617ca92964ad3d81787848f" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1VectorBase_1a164c7c788c4967c1c6ebcf7ae8466ba8" kindref="member">derived</ref>()<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(T{1}<sp/>/<sp/>rhs);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classdakku_1_1VectorBase_1ab9d87c9943039f3db32f3a6c703400b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1ab9d87c9943039f3db32f3a6c703400b0" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="459" refid="classdakku_1_1VectorBase_1aa48350ae3efe11576023da906438f0c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1aa48350ae3efe11576023da906438f0c8" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>Derived<sp/>ret<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>U&gt;</highlight></codeline>
<codeline lineno="473" refid="classdakku_1_1VectorBase_1ab4cd237f595d4bfe30fe64074eccd277" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>Derived<sp/><ref refid="classdakku_1_1VectorBase_1ab4cd237f595d4bfe30fe64074eccd277" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Derived(a)<sp/>/<sp/>b;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="479" refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" refkind="member"><highlight class="normal"><sp/><sp/>std::array&lt;T,<sp/>S&gt;<sp/><ref refid="classdakku_1_1VectorBase_1adfeaa30c58620f0e4e8cbc9bc911c60c" kindref="member">_data</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/vector_base.h"/>
  </compounddef>
</doxygen>
