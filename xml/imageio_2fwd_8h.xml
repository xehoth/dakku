<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="imageio_2fwd_8h" kind="file" language="C++">
    <compoundname>fwd.h</compoundname>
    <includes refid="platform_8h" local="no">platform.h</includes>
    <includes local="no">cmath</includes>
    <includedby refid="imageio_8h" local="no">src/imageio/imageio.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/imageio/fwd.h</label>
        <link refid="imageio_2fwd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/imageio/fwd.h</label>
        <link refid="imageio_2fwd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/imageio/imageio.h</label>
        <link refid="imageio_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="imageio_2fwd_8h_1ab0769d84ea09188408c5c02f1e8d42aa" prot="public" static="no">
        <name>DAKKU_EXPORT_IMAGEIO</name>
        <initializer><ref refid="platform_8h_1a5a852c25cfd1f921bfe140d4216a332f" kindref="member">DAKKU_EXPORT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/imageio/fwd.h" line="10" column="10" bodyfile="src/imageio/fwd.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_IMAGEIO_FWD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_IMAGEIO_FWD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="platform_8h" kindref="compound">platform.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DAKKU_BUILD_MODULE<sp/>!=<sp/>DAKKU_IMAGEIO_MODULE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_EXPORT_IMAGEIO<sp/>DAKKU_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="imageio_2fwd_8h_1ab0769d84ea09188408c5c02f1e8d42aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_EXPORT_IMAGEIO<sp/>DAKKU_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespacedakku_1af6341cd9dee71fb7731ce988277fea7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1af6341cd9dee71fb7731ce988277fea7c" kindref="member">gammaCorrect</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;=<sp/>0.0031308f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12.92f<sp/>*<sp/>value;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.055f<sp/>*<sp/>std::pow(value,<sp/>1.0f<sp/>/<sp/>2.4f)<sp/>-<sp/>0.055f;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacedakku_1aeb8251264c62aa09029e8f63d598e2b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1aeb8251264c62aa09029e8f63d598e2b3" kindref="member">inverseGammaCorrect</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;=<sp/>0.04045f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>/<sp/>12.92f;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow((value<sp/>+<sp/>0.055f)<sp/>/<sp/>1.055f,<sp/>2.4f);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/imageio/fwd.h"/>
  </compounddef>
</doxygen>
