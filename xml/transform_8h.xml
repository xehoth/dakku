<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="transform_8h" kind="file" language="C++">
    <compoundname>transform.h</compoundname>
    <includes refid="vector_8h" local="no">core/vector.h</includes>
    <includes refid="ray_8h" local="no">core/ray.h</includes>
    <includedby refid="property_8h" local="no">src/core/property.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>core/fwd.h</label>
        <link refid="core_2fwd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>core/ray.h</label>
        <link refid="ray_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>array</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="9">
        <label>numbers</label>
      </node>
      <node id="18">
        <label>numeric</label>
      </node>
      <node id="17">
        <label>ostream</label>
      </node>
      <node id="12">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="11">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/core/api.h</label>
        <link refid="core_2api_8h"/>
      </node>
      <node id="3">
        <label>src/core/class.h</label>
        <link refid="class_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/core/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/core/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/core/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/stream/api.h</label>
        <link refid="stream_2api_8h"/>
      </node>
      <node id="8">
        <label>src/stream/fstream.h</label>
        <link refid="fstream_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/stream/fwd.h</label>
        <link refid="stream_2fwd_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdakku_1_1Matrix4x4" prot="public">dakku::Matrix4x4</innerclass>
    <innerclass refid="classdakku_1_1Transform" prot="public">dakku::Transform</innerclass>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_CORE_TRANSFORM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_CORE_TRANSFORM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector_8h" kindref="compound">core/vector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ray_8h" kindref="compound">core/ray.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structdakku_1_1Matrix4x4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>{</highlight></codeline>
<codeline lineno="17" refid="structdakku_1_1Matrix4x4_1a04ffa0470a01980b11bd71b15a698fa0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4_1a04ffa0470a01980b11bd71b15a698fa0" kindref="member">Matrix4x4</ref>()<sp/>{<sp/>setIdentity();<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structdakku_1_1Matrix4x4_1a9969de4e8ca980efbe5adde6d7f9b80c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4_1a9969de4e8ca980efbe5adde6d7f9b80c" kindref="member">Matrix4x4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t00,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t01,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t02,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t03,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t10,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t11,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t12,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t13,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t20,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t21,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t22,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t23,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t30,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t31,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t32,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t33)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/>t00;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][1]<sp/>=<sp/>t01;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][2]<sp/>=<sp/>t02;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][3]<sp/>=<sp/>t03;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][0]<sp/>=<sp/>t10;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][1]<sp/>=<sp/>t11;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][2]<sp/>=<sp/>t12;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][3]<sp/>=<sp/>t13;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][0]<sp/>=<sp/>t20;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][1]<sp/>=<sp/>t21;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][2]<sp/>=<sp/>t22;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][3]<sp/>=<sp/>t23;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][0]<sp/>=<sp/>t30;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][1]<sp/>=<sp/>t31;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][2]<sp/>=<sp/>t32;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m[3][3]<sp/>=<sp/>t33;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structdakku_1_1Matrix4x4_1aa057e26fddc7b42656ae8425d48a5b20" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4_1aa057e26fddc7b42656ae8425d48a5b20" kindref="member">Matrix4x4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>m[i][j]<sp/>=<sp/>v[j<sp/>*<sp/>4<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structdakku_1_1Matrix4x4_1afa2d87deca31076d5166d3c5335e8e22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m[i];<sp/>}</highlight></codeline>
<codeline lineno="54" refid="structdakku_1_1Matrix4x4_1adbd9aa389d5861cbb9961db9ea21b219" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m[i];<sp/>}</highlight></codeline>
<codeline lineno="55" refid="structdakku_1_1Matrix4x4_1a283f29f1cb3aa1bdeeb929a0896a5835" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m[i][j];<sp/>}</highlight></codeline>
<codeline lineno="56" refid="structdakku_1_1Matrix4x4_1a00d3970084edf324f911eb2bf3b29936" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m[i][j];<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structdakku_1_1Matrix4x4_1a23f75e2553126934f408f117eaed9849" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4_1a23f75e2553126934f408f117eaed9849" kindref="member">setIdentity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][1]<sp/>=<sp/>m[0][2]<sp/>=<sp/>m[0][3]<sp/>=<sp/>m[1][0]<sp/>=<sp/>m[1][2]<sp/>=<sp/>m[1][3]<sp/>=<sp/>m[2][0]<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[2][1]<sp/>=<sp/>m[2][3]<sp/>=<sp/>m[3][0]<sp/>=<sp/>m[3][1]<sp/>=<sp/>m[3][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/>m[1][1]<sp/>=<sp/>m[2][2]<sp/>=<sp/>m[3][3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structdakku_1_1Matrix4x4_1aa440eb3fd11ed3003aad440b17e84e5c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4_1aa440eb3fd11ed3003aad440b17e84e5c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>==<sp/>rhs.<ref refid="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structdakku_1_1Matrix4x4_1a5b55b6346b398a8dac63fbcb0f873375" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4_1a5b55b6346b398a8dac63fbcb0f873375" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>!=<sp/>rhs.<ref refid="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structdakku_1_1Matrix4x4_1a842b9884e102b87cb20746608fb04aa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/><ref refid="structdakku_1_1Matrix4x4_1a842b9884e102b87cb20746608fb04aa2" kindref="member">mul</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;b);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structdakku_1_1Matrix4x4_1a0a2e0854eec31d6d12a8c3757cd1a7c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/><ref refid="structdakku_1_1Matrix4x4_1a0a2e0854eec31d6d12a8c3757cd1a7c0" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mul(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structdakku_1_1Matrix4x4_1a1f503531ba9a7dc39f0fc8124aa2d778" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/><ref refid="structdakku_1_1Matrix4x4_1a1f503531ba9a7dc39f0fc8124aa2d778" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>mul(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structdakku_1_1Matrix4x4_1ad9179852977de8383c0ae1683f12fc5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="structdakku_1_1Matrix4x4_1ad9179852977de8383c0ae1683f12fc5f" kindref="member">transpose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;m);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structdakku_1_1Matrix4x4_1ac742caf08472cdfeda8fce5abf75c6a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="structdakku_1_1Matrix4x4_1ac742caf08472cdfeda8fce5abf75c6a9" kindref="member">inverse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;m);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structdakku_1_1Matrix4x4_1ad229acdd4f70387d3fd3b3df3dad8854" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4_1ad229acdd4f70387d3fd3b3df3dad8854" kindref="member">isIdentity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref>{};<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structdakku_1_1Matrix4x4_1af28df8d5712634ebdec64eebcc804bde" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/><ref refid="structdakku_1_1Matrix4x4_1af28df8d5712634ebdec64eebcc804bde" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>std::to_string(m[i][j]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>j<sp/>==<sp/>3))<sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structdakku_1_1Matrix4x4_1a014300d3c91b6eea30d2c2e20f5d08ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="structdakku_1_1Matrix4x4_1a014300d3c91b6eea30d2c2e20f5d08ab" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>m.<ref refid="structdakku_1_1Matrix4x4_1af28df8d5712634ebdec64eebcc804bde" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structdakku_1_1Matrix4x4_1acf7c461dc9d1d64ef7cac56f038e07b3" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>std::vector&lt;float&gt;<sp/><ref refid="structdakku_1_1Matrix4x4_1acf7c461dc9d1d64ef7cac56f038e07b3" kindref="member">toFloatVector</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>ret(16);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>ret[j<sp/>*<sp/>4<sp/>+<sp/>i]<sp/>=<sp/>m[i][j];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" refkind="member"><highlight class="normal"><sp/><sp/>std::array&lt;std::array&lt;float,<sp/>4&gt;,<sp/>4&gt;<sp/><ref refid="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classdakku_1_1Transform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132" refid="classdakku_1_1Transform_1a6a18809585d933e89bece05fd4fad20f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Transform_1a6a18809585d933e89bece05fd4fad20f" kindref="member">Transform</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133" refid="classdakku_1_1Transform_1a7809d4e7b8bffafdffe6667903333f2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Transform_1a7809d4e7b8bffafdffe6667903333f2c" kindref="member">Transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;m)<sp/>:<sp/>m(m),<sp/>mInv(<ref refid="classdakku_1_1Transform_1aa2b52f8ec5f9c6049e79d35e0b9e3716" kindref="member">inverse</ref>(m))<sp/>{}</highlight></codeline>
<codeline lineno="134" refid="classdakku_1_1Transform_1a8102c7b4c288d853ef0f7084f9e2a607" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Transform_1a8102c7b4c288d853ef0f7084f9e2a607" kindref="member">Transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;mInv)<sp/>:<sp/>m(m),<sp/>mInv(mInv)<sp/>{}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classdakku_1_1Transform_1aa2b52f8ec5f9c6049e79d35e0b9e3716" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="classdakku_1_1Transform_1aa2b52f8ec5f9c6049e79d35e0b9e3716" kindref="member">inverse</ref>(<ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;t)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{t.mInv,<sp/>t.m};<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classdakku_1_1Transform_1a3f1c4a4501cc53bf76979899c6da9498" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="classdakku_1_1Transform_1a3f1c4a4501cc53bf76979899c6da9498" kindref="member">transpose</ref>(<ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;t)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="classdakku_1_1Transform_1a3f1c4a4501cc53bf76979899c6da9498" kindref="member">transpose</ref>(t.m),<sp/><ref refid="classdakku_1_1Transform_1a3f1c4a4501cc53bf76979899c6da9498" kindref="member">transpose</ref>(t.mInv)};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classdakku_1_1Transform_1ac0970a3fb0e2e6beefdd501784ece9ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform_1ac0970a3fb0e2e6beefdd501784ece9ab" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>==<sp/>rhs.m<sp/>&amp;&amp;<sp/>mInv<sp/>==<sp/>rhs.mInv;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classdakku_1_1Transform_1a7f9b98863c921918467d5350b50c7fac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform_1a7f9b98863c921918467d5350b50c7fac" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>!=<sp/>rhs.m<sp/>||<sp/>mInv<sp/>!=<sp/>rhs.mInv;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classdakku_1_1Transform_1aa23268759b85043f746f63d587b23c14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform_1aa23268759b85043f746f63d587b23c14" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m(i,<sp/>j)<sp/>&lt;<sp/>rhs.m(i,<sp/>j))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m(i,<sp/>j)<sp/>&gt;<sp/>rhs.m(i,<sp/>j))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classdakku_1_1Transform_1ab26be3dac928e072b2450cf295f728f0" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform_1ab26be3dac928e072b2450cf295f728f0" kindref="member">isIdentity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m.<ref refid="structdakku_1_1Matrix4x4_1ad229acdd4f70387d3fd3b3df3dad8854" kindref="member">isIdentity</ref>();<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classdakku_1_1Transform_1a16c268ca0de61e5592ae2a2189888a9a" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;<ref refid="classdakku_1_1Transform_1a16c268ca0de61e5592ae2a2189888a9a" kindref="member">getMatrix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classdakku_1_1Transform_1a0c00a8d967a8533934201d31f8395170" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>&amp;<ref refid="classdakku_1_1Transform_1a0c00a8d967a8533934201d31f8395170" kindref="member">getInverseMatrix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInv;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref><sp/>&amp;p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3&lt;T&gt;</ref><sp/>&amp;v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3&lt;T&gt;</ref><sp/>&amp;n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/>&amp;r)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RayDifferential" kindref="compound">RayDifferential</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RayDifferential" kindref="compound">RayDifferential</ref><sp/>&amp;r)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classdakku_1_1Transform_1ac37fe5a9c1d271ad939d813cf6862043" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="classdakku_1_1Transform_1ac37fe5a9c1d271ad939d813cf6862043" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{m<sp/>*<sp/>rhs.m,<sp/>rhs.mInv<sp/>*<sp/>mInv};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classdakku_1_1Transform_1a5bc005e21588a6ae9f81eadbd312a38c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Transform_1a5bc005e21588a6ae9f81eadbd312a38c" kindref="member">swapsHandedNess</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>det<sp/>=<sp/>m[0][0]<sp/>*<sp/>(m[1][1]<sp/>*<sp/>m[2][2]<sp/>-<sp/>m[1][2]<sp/>*<sp/>m[2][1])<sp/>-</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[0][1]<sp/>*<sp/>(m[1][0]<sp/>*<sp/>m[2][2]<sp/>-<sp/>m[1][2]<sp/>*<sp/>m[2][0])<sp/>+</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[0][2]<sp/>*<sp/>(m[1][0]<sp/>*<sp/>m[2][1]<sp/>-<sp/>m[1][1]<sp/>*<sp/>m[2][0]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>det<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref><sp/>m,<sp/>mInv;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="236" refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">Transform::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref><sp/>&amp;p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>T<sp/>x<sp/>=<sp/>p.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>(),<sp/>y<sp/>=<sp/>p.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>(),<sp/>z<sp/>=<sp/>p.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>T<sp/>xp<sp/>=<sp/>m[0][0]<sp/>*<sp/>x<sp/>+<sp/>m[0][1]<sp/>*<sp/>y<sp/>+<sp/>m[0][2]<sp/>*<sp/>z<sp/>+<sp/>m[0][3];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>T<sp/>yp<sp/>=<sp/>m[1][0]<sp/>*<sp/>x<sp/>+<sp/>m[1][1]<sp/>*<sp/>y<sp/>+<sp/>m[1][2]<sp/>*<sp/>z<sp/>+<sp/>m[1][3];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>T<sp/>zp<sp/>=<sp/>m[2][0]<sp/>*<sp/>x<sp/>+<sp/>m[2][1]<sp/>*<sp/>y<sp/>+<sp/>m[2][2]<sp/>*<sp/>z<sp/>+<sp/>m[2][3];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>T<sp/>wp<sp/>=<sp/>m[3][0]<sp/>*<sp/>x<sp/>+<sp/>m[3][1]<sp/>*<sp/>y<sp/>+<sp/>m[3][2]<sp/>*<sp/>z<sp/>+<sp/>m[3][3];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(wp<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;divide<sp/>by<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref>(xp,<sp/>yp,<sp/>zp);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3&lt;T&gt;</ref>(xp,<sp/>yp,<sp/>zp)<sp/>/<sp/>wp;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="250" refid="classdakku_1_1Transform_1aa0b6d3baf3d84b715395a232a615c73f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">Transform::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3&lt;T&gt;</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>T<sp/>x<sp/>=<sp/>v.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>(),<sp/>y<sp/>=<sp/>v.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>(),<sp/>z<sp/>=<sp/>v.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3&lt;T&gt;</ref>(m[0][0]<sp/>*<sp/>x<sp/>+<sp/>m[0][1]<sp/>*<sp/>y<sp/>+<sp/>m[0][2]<sp/>*<sp/>z,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[1][0]<sp/>*<sp/>x<sp/>+<sp/>m[1][1]<sp/>*<sp/>y<sp/>+<sp/>m[1][2]<sp/>*<sp/>z,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[2][0]<sp/>*<sp/>x<sp/>+<sp/>m[2][1]<sp/>*<sp/>y<sp/>+<sp/>m[2][2]<sp/>*<sp/>z);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ArithmeticType<sp/>T&gt;</highlight></codeline>
<codeline lineno="258" refid="classdakku_1_1Transform_1a17520267cbc3c89b0aef0943596dc3a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3&lt;T&gt;</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">Transform::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3&lt;T&gt;</ref><sp/>&amp;n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>T<sp/>x<sp/>=<sp/>n.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>(),<sp/>y<sp/>=<sp/>n.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>(),<sp/>z<sp/>=<sp/>n.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3&lt;T&gt;</ref>(mInv[0][0]<sp/>*<sp/>x<sp/>+<sp/>mInv[1][0]<sp/>*<sp/>y<sp/>+<sp/>mInv[2][0]<sp/>*<sp/>z,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInv[0][1]<sp/>*<sp/>x<sp/>+<sp/>mInv[1][1]<sp/>*<sp/>y<sp/>+<sp/>mInv[2][1]<sp/>*<sp/>z,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInv[0][2]<sp/>*<sp/>x<sp/>+<sp/>mInv[1][2]<sp/>*<sp/>y<sp/>+<sp/>mInv[2][2]<sp/>*<sp/>z);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classdakku_1_1Transform_1a78da0df5b5d2b335d7c71346cdc727de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">Transform::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/>&amp;r)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3f</ref><sp/>o<sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1Ray_1ad3f89d04f0328c3efbb29d031d6ce88f" kindref="member">o</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>d<sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1Ray_1a8dcbd22835ce89acc2eaabacd4147a7f" kindref="member">d</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref>(o,<sp/>d,<sp/>r.<ref refid="classdakku_1_1Ray_1ab5b9ced3d745542bb55fee75331aacfa" kindref="member">tMax</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classdakku_1_1Transform_1af1de7e6eabb7e21d00d2d424979f93d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RayDifferential" kindref="compound">RayDifferential</ref><sp/><ref refid="classdakku_1_1Transform_1a7140b660a56fb533cceebcbedd6d4fab" kindref="member">Transform::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RayDifferential" kindref="compound">RayDifferential</ref><sp/>&amp;r)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/>tr<sp/>=<sp/>(*this)(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(r));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1RayDifferential" kindref="compound">RayDifferential</ref><sp/>ret(tr.<ref refid="classdakku_1_1Ray_1ad3f89d04f0328c3efbb29d031d6ce88f" kindref="member">o</ref>,<sp/>tr.<ref refid="classdakku_1_1Ray_1a8dcbd22835ce89acc2eaabacd4147a7f" kindref="member">d</ref>,<sp/>tr.<ref refid="classdakku_1_1Ray_1ab5b9ced3d745542bb55fee75331aacfa" kindref="member">tMax</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>ret.<ref refid="classdakku_1_1RayDifferential_1ac6f8ba438a5800b4c3214130ef74ade9" kindref="member">hasDifferentials</ref><sp/>=<sp/>r.<ref refid="classdakku_1_1RayDifferential_1ac6f8ba438a5800b4c3214130ef74ade9" kindref="member">hasDifferentials</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>ret.<ref refid="classdakku_1_1RayDifferential_1a3be040cf4594c7d98ee828cc57952836" kindref="member">rxOrigin</ref><sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1RayDifferential_1a3be040cf4594c7d98ee828cc57952836" kindref="member">rxOrigin</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>ret.<ref refid="classdakku_1_1RayDifferential_1aef5fba3bfaf8160133c2fbd431bad5e4" kindref="member">ryOrigin</ref><sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1RayDifferential_1aef5fba3bfaf8160133c2fbd431bad5e4" kindref="member">ryOrigin</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>ret.<ref refid="classdakku_1_1RayDifferential_1acf47caf596e05e6d6e0997db09639166" kindref="member">rxDirection</ref><sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1RayDifferential_1acf47caf596e05e6d6e0997db09639166" kindref="member">rxDirection</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>ret.<ref refid="classdakku_1_1RayDifferential_1a6592c3850275eb045ce8584d4f671019" kindref="member">ryDirection</ref><sp/>=<sp/>(*this)(r.<ref refid="classdakku_1_1RayDifferential_1a6592c3850275eb045ce8584d4f671019" kindref="member">ryDirection</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="namespacedakku_1a1e461427d5e700eff84e148509b7fcba" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a1e461427d5e700eff84e148509b7fcba" kindref="member">translate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;delta);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="namespacedakku_1a7acbd19453bccf5b94cfa1133df02981" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a7acbd19453bccf5b94cfa1133df02981" kindref="member">scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="namespacedakku_1a9a343fe7cec03ad3c562a926fc052f6d" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a9a343fe7cec03ad3c562a926fc052f6d" kindref="member">rotateX</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespacedakku_1a6ddc73eb8238f15d8c1016069962e8c4" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a6ddc73eb8238f15d8c1016069962e8c4" kindref="member">rotateY</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="namespacedakku_1a2bbb040f4ba3ff426a543ad8129195de" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a2bbb040f4ba3ff426a543ad8129195de" kindref="member">rotateZ</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="namespacedakku_1a5158202b82b35e77f9fc61285161488a" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a5158202b82b35e77f9fc61285161488a" kindref="member">rotate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;axis);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="namespacedakku_1aaa536865ee7be0b7a4ed6109f261eeb7" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1aaa536865ee7be0b7a4ed6109f261eeb7" kindref="member">lookAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3f</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point3f</ref><sp/>&amp;look,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;refUp);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="namespacedakku_1a027a77f92f8ae36b091ef409ec0b4c6e" refkind="member"><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref><sp/><ref refid="namespacedakku_1a027a77f92f8ae36b091ef409ec0b4c6e" kindref="member">perspective</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fov,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>znear,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zfar);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/transform.h"/>
  </compounddef>
</doxygen>
