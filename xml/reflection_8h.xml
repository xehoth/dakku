<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="reflection_8h" kind="file" language="C++">
    <compoundname>reflection.h</compoundname>
    <includes refid="vector_8h" local="no">core/vector.h</includes>
    <incdepgraph>
      <node id="5">
        <label>core/fwd.h</label>
        <link refid="core_2fwd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="12">
        <label>bit</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="9">
        <label>numbers</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="14">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innerclass refid="classdakku_1_1BSDF" prot="public">dakku::BSDF</innerclass>
    <innerclass refid="classdakku_1_1BxDF" prot="public">dakku::BxDF</innerclass>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_CORE_REFLECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_CORE_REFLECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector_8h" kindref="compound">core/vector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="namespacedakku_1afff271d6755ba6c5bce88e472b0fda97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1afff271d6755ba6c5bce88e472b0fda97" kindref="member">cosTheta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();<sp/>}</highlight></codeline>
<codeline lineno="7" refid="namespacedakku_1af1be72fe6812bf50fc174613feb27653" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1af1be72fe6812bf50fc174613feb27653" kindref="member">cos2Theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>()<sp/>*<sp/>w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();<sp/>}</highlight></codeline>
<codeline lineno="8" refid="namespacedakku_1a879ba33876b48280366546d864b543f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a879ba33876b48280366546d864b543f2" kindref="member">absCosTheta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>());<sp/>}</highlight></codeline>
<codeline lineno="9" refid="namespacedakku_1aea86efd5024447271fd1b82566f21879" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1aea86efd5024447271fd1b82566f21879" kindref="member">sin2Theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0),<sp/>1<sp/>-<sp/><ref refid="namespacedakku_1af1be72fe6812bf50fc174613feb27653" kindref="member">cos2Theta</ref>(w));</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12" refid="namespacedakku_1ad8019351269f1f3f694d08469157e0a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1ad8019351269f1f3f694d08469157e0a5" kindref="member">sinTheta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<ref refid="namespacedakku_1aea86efd5024447271fd1b82566f21879" kindref="member">sin2Theta</ref>(w));<sp/>}</highlight></codeline>
<codeline lineno="13" refid="namespacedakku_1ac7b4842ad43512dfab7c97697743872b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1ac7b4842ad43512dfab7c97697743872b" kindref="member">tanTheta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1ad8019351269f1f3f694d08469157e0a5" kindref="member">sinTheta</ref>(w)<sp/>/<sp/><ref refid="namespacedakku_1afff271d6755ba6c5bce88e472b0fda97" kindref="member">cosTheta</ref>(w);<sp/>}</highlight></codeline>
<codeline lineno="14" refid="namespacedakku_1a3eea109f743777a1225937b8e80add49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a3eea109f743777a1225937b8e80add49" kindref="member">tan2Theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1aea86efd5024447271fd1b82566f21879" kindref="member">sin2Theta</ref>(w)<sp/>/<sp/><ref refid="namespacedakku_1af1be72fe6812bf50fc174613feb27653" kindref="member">cos2Theta</ref>(w);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17" refid="namespacedakku_1a06e3b9f59237e8dc78bb02794fa80b04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a06e3b9f59237e8dc78bb02794fa80b04" kindref="member">cosPhi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinT<sp/>=<sp/><ref refid="namespacedakku_1ad8019351269f1f3f694d08469157e0a5" kindref="member">sinTheta</ref>(w);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sinT<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>std::clamp&lt;float&gt;(w.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>()<sp/>/<sp/>sinT,<sp/>-1,<sp/>1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21" refid="namespacedakku_1a841c3518071695ee54986494313d1803" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a841c3518071695ee54986494313d1803" kindref="member">sinPhi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinT<sp/>=<sp/><ref refid="namespacedakku_1ad8019351269f1f3f694d08469157e0a5" kindref="member">sinTheta</ref>(w);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sinT<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>std::clamp&lt;float&gt;(w.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>()<sp/>/<sp/>sinT,<sp/>-1,<sp/>1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25" refid="namespacedakku_1a8871f526c772a63c8aa084c2a4a5ed07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a8871f526c772a63c8aa084c2a4a5ed07" kindref="member">cos2Phi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a06e3b9f59237e8dc78bb02794fa80b04" kindref="member">cosPhi</ref>(w)<sp/>*<sp/><ref refid="namespacedakku_1a06e3b9f59237e8dc78bb02794fa80b04" kindref="member">cosPhi</ref>(w);<sp/>}</highlight></codeline>
<codeline lineno="26" refid="namespacedakku_1accd4ed8e0230cdf8f420e33dcc532311" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1accd4ed8e0230cdf8f420e33dcc532311" kindref="member">sin2Phi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a841c3518071695ee54986494313d1803" kindref="member">sinPhi</ref>(w)<sp/>*<sp/><ref refid="namespacedakku_1a841c3518071695ee54986494313d1803" kindref="member">sinPhi</ref>(w);<sp/>}</highlight></codeline>
<codeline lineno="27" refid="namespacedakku_1acba70ca995b749f7ef8daa9379d22153" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1acba70ca995b749f7ef8daa9379d22153" kindref="member">sameHemisphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>()<sp/>*<sp/>n.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30" refid="namespacedakku_1a89dbbdf1e8f3a5b8b0e813d8242541a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1acba70ca995b749f7ef8daa9379d22153" kindref="member">sameHemisphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;w,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3f</ref><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>()<sp/>*<sp/>n.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespacedakku_1a3bb200e88e63690051e6bad2afab6bb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a3bb200e88e63690051e6bad2afab6bb2" kindref="member">frDielectric</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosThetaI,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>etaI,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>etaT);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="namespacedakku_1af4d59c83a86090d6b80cf663c39fbf85" refkind="member"><highlight class="normal"><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/><ref refid="namespacedakku_1af4d59c83a86090d6b80cf663c39fbf85" kindref="member">frConductor</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosThetaI,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/>&amp;etaI,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/>&amp;etaT,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/>&amp;k);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespacedakku_1a8495aaad546987b3e302208282517a15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/><ref refid="namespacedakku_1a8495aaad546987b3e302208282517a15" kindref="member">reflect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-wo<sp/>+<sp/>2<sp/>*<sp/>wo.<ref refid="classdakku_1_1VectorBase_1ab55fd8f1a9e9835b5383189560c86973" kindref="member">dot</ref>(n)<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespacedakku_1ad46911925bf23eb15e4f60875257ed9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1ad46911925bf23eb15e4f60875257ed9f" kindref="member">refract</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3f</ref><sp/>&amp;n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wt)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cosTheta<sp/>using<sp/>Snell&apos;s<sp/>law</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosThetaI<sp/>=<sp/>n.<ref refid="classdakku_1_1VectorBase_1ab55fd8f1a9e9835b5383189560c86973" kindref="member">dot</ref>(wi);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin2ThetaI<sp/>=<sp/>std::max(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0),<sp/>1<sp/>-<sp/>cosThetaI<sp/>*<sp/>cosThetaI);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin2ThetaT<sp/>=<sp/>eta<sp/>*<sp/>eta<sp/>*<sp/>sin2ThetaI;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>total<sp/>internal<sp/>reflection<sp/>for<sp/>transmission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sin2ThetaT<sp/>&gt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosThetaT<sp/>=<sp/>std::sqrt(1<sp/>-<sp/>sin2ThetaT);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>wt<sp/>=<sp/>eta<sp/>*<sp/>-wi<sp/>+<sp/>(eta<sp/>*<sp/>cosThetaI<sp/>-<sp/>cosThetaT)<sp/>*<sp/><ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref>(n);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>:<sp/>int<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da356402ab98f54dd6f9952d489019fd94" kindref="member">BSDF_REFLECTION</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12dad4b2381d05d0eff37cab70f4b32d09b4" kindref="member">BSDF_TRANSMISSION</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da89e47090c25e812346446e1fc9d025d3" kindref="member">BSDF_DIFFUSE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da0446199c5b80a38b659b688b2ecf6b83" kindref="member">BSDF_GLOSSY</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da90b0abfd8625757492aea7d047aea985" kindref="member">BSDF_SPECULAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12daa3f83dc1510822e8b71fd10be02a3186" kindref="member">BSDF_ALL</ref><sp/>=<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da89e47090c25e812346446e1fc9d025d3" kindref="member">BSDF_DIFFUSE</ref><sp/>|<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da0446199c5b80a38b659b688b2ecf6b83" kindref="member">BSDF_GLOSSY</ref><sp/>|<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da90b0abfd8625757492aea7d047aea985" kindref="member">BSDF_SPECULAR</ref><sp/>|<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12da356402ab98f54dd6f9952d489019fd94" kindref="member">BSDF_REFLECTION</ref><sp/>|</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12dad4b2381d05d0eff37cab70f4b32d09b4" kindref="member">BSDF_TRANSMISSION</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="namespacedakku_1ad12f3d2e3190c7aa08c22de45de621a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1ad12f3d2e3190c7aa08c22de45de621a9" kindref="member">operator&amp;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a)<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespacedakku_1afd5aa3a8929d78feb77aea41fae4f997" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1afd5aa3a8929d78feb77aea41fae4f997" kindref="member">operator|</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacedakku_1ad73ccae1cd088ac5d10ec643bc15eb82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1ad12f3d2e3190c7aa08c22de45de621a9" kindref="member">operator&amp;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a)<sp/>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="namespacedakku_1aa24d67eab0201ec6b4f849fa11592eb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1ad12f3d2e3190c7aa08c22de45de621a9" kindref="member">operator&amp;</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="namespacedakku_1a48a0c304ff8eac7ee3d67fbd229c6307" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1afd5aa3a8929d78feb77aea41fae4f997" kindref="member">operator|</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="namespacedakku_1a93adc4d20e18e33bc3904f0eb9658961" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="namespacedakku_1afd5aa3a8929d78feb77aea41fae4f997" kindref="member">operator|</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classdakku_1_1BSDF" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1BSDF" kindref="compound">BSDF</ref><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133" refid="classdakku_1_1BSDF_1a126894c3deb1ad280865b2a4f00af23c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BSDF_1a126894c3deb1ad280865b2a4f00af23c" kindref="member">BSDF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1SurfaceInteraction" kindref="compound">SurfaceInteraction</ref><sp/>&amp;si,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classdakku_1_1BSDF_1a41722d90c317ad5eea521cfc4dec42f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BSDF_1a41722d90c317ad5eea521cfc4dec42f6" kindref="member">add</ref>(<ref refid="classdakku_1_1BxDF" kindref="compound">BxDF</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ad7e55cac030fb7ab38ebcfce264c1b3e" kindref="member">DAKKU_CHECK</ref>(nBxDFs<sp/>&lt;<sp/>MAX_BXDFS,<sp/></highlight><highlight class="stringliteral">&quot;overflow:<sp/>too<sp/>many<sp/>BxDFs!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>bxdfs[nBxDFs++]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139" refid="classdakku_1_1BSDF_1aff581f3e97964d29aec2e10b7548a265" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/><ref refid="classdakku_1_1BSDF_1aff581f3e97964d29aec2e10b7548a265" kindref="member">worldToLocal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref>{v.<ref refid="classdakku_1_1VectorBase_1ab55fd8f1a9e9835b5383189560c86973" kindref="member">dot</ref>(ss),<sp/>v.<ref refid="classdakku_1_1VectorBase_1ab55fd8f1a9e9835b5383189560c86973" kindref="member">dot</ref>(ts),<sp/>v.<ref refid="classdakku_1_1VectorBase_1ab55fd8f1a9e9835b5383189560c86973" kindref="member">dot</ref>(ns)};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142" refid="classdakku_1_1BSDF_1a5d63e7ea9cb6790be6f6c88c03781b44" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/><ref refid="classdakku_1_1BSDF_1a5d63e7ea9cb6790be6f6c88c03781b44" kindref="member">localToWorld</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss<sp/>*<sp/>v.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>()<sp/>+<sp/>ts<sp/>*<sp/>v.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>()<sp/>+<sp/><ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref>(ns)<sp/>*<sp/>v.<ref refid="classdakku_1_1VectorBase_1a207d3b94f85366aeb9e7773785a498ea" kindref="member">z</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148" refid="classdakku_1_1BSDF_1ad3aa7ac3f3f868ee333cb04067124459" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BSDF_1ad3aa7ac3f3f868ee333cb04067124459" kindref="member">numComponents</ref>(<ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>flags)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152" refid="classdakku_1_1BSDF_1a1d54c9cbd6d3048b2a9c03f55a0d1708" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/><ref refid="classdakku_1_1BSDF_1a1d54c9cbd6d3048b2a9c03f55a0d1708" kindref="member">f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;woW,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wiW,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>flags<sp/>=<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12daa3f83dc1510822e8b71fd10be02a3186" kindref="member">BxDFType::BSDF_ALL</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161" refid="classdakku_1_1BSDF_1ade79e649ea561dbd1fb22946feba2abd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/><ref refid="classdakku_1_1BSDF_1ade79e649ea561dbd1fb22946feba2abd" kindref="member">sampleF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,<sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;sample,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;pdf,<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>type<sp/>=<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12daa3f83dc1510822e8b71fd10be02a3186" kindref="member">BxDFType::BSDF_ALL</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>*sampledType<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164" refid="classdakku_1_1BSDF_1a97af40d797653a84e77ae0dc9eb2c54c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BSDF_1a97af40d797653a84e77ae0dc9eb2c54c" kindref="member">pdf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>flags<sp/>=<sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12daa3f83dc1510822e8b71fd10be02a3186" kindref="member">BxDFType::BSDF_ALL</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>relative<sp/>index<sp/>of<sp/>refraction<sp/>over<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classdakku_1_1BSDF_1a7ab07005a7e1a9cb8e1c72727932bef3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BSDF_1a7ab07005a7e1a9cb8e1c72727932bef3" kindref="member">eta</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shading<sp/>normal,<sp/>geometric<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Normal" kindref="compound">Normal3f</ref><sp/>ns,<sp/>ng;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>orthonormal<sp/>vectors<sp/>(BSDF<sp/>coordinate<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>ss,<sp/>ts;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBxDFs{};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_BXDFS<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1BxDF" kindref="compound">BxDF</ref><sp/>*bxdfs[MAX_BXDFS]{};</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classdakku_1_1BxDF" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1BxDF" kindref="compound">BxDF</ref><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186" refid="classdakku_1_1BxDF_1a2985c5c9e8d7b6d743475ac13f651923" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BxDF_1a2985c5c9e8d7b6d743475ac13f651923" kindref="member">~BxDF</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187" refid="classdakku_1_1BxDF_1a2f834b64a6323b941fed1b5f21d450a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BxDF_1a2f834b64a6323b941fed1b5f21d450a6" kindref="member">BxDF</ref>(<ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>type)<sp/>:<sp/>type(type)<sp/>{}</highlight></codeline>
<codeline lineno="188" refid="classdakku_1_1BxDF_1ad4e188a72bdf539443ecafa16e34b22e" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BxDF_1ad4e188a72bdf539443ecafa16e34b22e" kindref="member">matchesFlags</ref>(<ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(type<sp/>&amp;<sp/>t)<sp/>==<sp/>type;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194" refid="classdakku_1_1BxDF_1aa9a72f802cdc8f468bfb42e9e44415ca" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/><ref refid="classdakku_1_1BxDF_1aa9a72f802cdc8f468bfb42e9e44415ca" kindref="member">f</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203" refid="classdakku_1_1BxDF_1a653ac17b4941a3b3ffdd0e1b53a4961f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">Spectrum</ref><sp/><ref refid="classdakku_1_1BxDF_1a653ac17b4941a3b3ffdd0e1b53a4961f" kindref="member">sampleF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,<sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;sample,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;pdf,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/>*sampledType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209" refid="classdakku_1_1BxDF_1a57aed4a4de49f434b72cbf8a002e78cf" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1BxDF_1a57aed4a4de49f434b72cbf8a002e78cf" kindref="member">pdf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/>&amp;wi)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classdakku_1_1BxDF_1af4e3363340c6ce72932ccc7303107f84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a6ee44a156e67a6dd3f3d70609f10a12d" kindref="member">BxDFType</ref><sp/><ref refid="classdakku_1_1BxDF_1af4e3363340c6ce72932ccc7303107f84" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/reflection.h"/>
  </compounddef>
</doxygen>
