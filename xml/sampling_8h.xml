<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="sampling_8h" kind="file" language="C++">
    <compoundname>sampling.h</compoundname>
    <includes refid="vector_8h" local="no">core/vector.h</includes>
    <incdepgraph>
      <node id="5">
        <label>core/fwd.h</label>
        <link refid="core_2fwd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/sampling.h</label>
        <link refid="sampling_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="12">
        <label>bit</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="9">
        <label>numbers</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="14">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_CORE_SAMPLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_CORE_SAMPLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector_8h" kindref="compound">core/vector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespacedakku_1a972fe24ecab810defaab710b05a1d30a" refkind="member"><highlight class="normal"><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/><ref refid="namespacedakku_1a972fe24ecab810defaab710b05a1d30a" kindref="member">uniformSampleTriangle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;u);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacedakku_1a656594e267b6cd6917580e34ed50ee01" refkind="member"><highlight class="normal"><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/><ref refid="namespacedakku_1a656594e267b6cd6917580e34ed50ee01" kindref="member">concentricSampleDisk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;u);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespacedakku_1a457a044effa42ab1afd0dc61ff2ddc71" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/><ref refid="namespacedakku_1a457a044effa42ab1afd0dc61ff2ddc71" kindref="member">cosineSampleHemisphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;u)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>d<sp/>=<sp/><ref refid="namespacedakku_1a656594e267b6cd6917580e34ed50ee01" kindref="member">concentricSampleDisk</ref>(u);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>std::sqrt(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::max(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0),<sp/>1<sp/>-<sp/>d.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>()<sp/>*<sp/>d.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>()<sp/>-<sp/>d.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>()<sp/>*<sp/>d.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>()));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref>{d.<ref refid="classdakku_1_1VectorBase_1aad720931a9787a87375de3f8d545567d" kindref="member">x</ref>(),<sp/>d.<ref refid="classdakku_1_1VectorBase_1a14b6216fd55dc1cd2f321c834f6121ca" kindref="member">y</ref>(),<sp/>z};</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespacedakku_1a8d0a8a38a5884ff0cf4397214bd22378" refkind="member"><highlight class="normal"><ref refid="classdakku_1_1Vector" kindref="compound">Vector3f</ref><sp/><ref refid="namespacedakku_1a8d0a8a38a5884ff0cf4397214bd22378" kindref="member">uniformSampleSphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Point" kindref="compound">Point2f</ref><sp/>&amp;u);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacedakku_1a7c3e7ee0be950fb7fbfb62fceb80eec5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1a7c3e7ee0be950fb7fbfb62fceb80eec5" kindref="member">powerHeuristic</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fPdf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gPdf)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nf)<sp/>*<sp/>fPdf,<sp/>g<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ng)<sp/>*<sp/>gPdf;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(f<sp/>*<sp/>f)<sp/>/<sp/>(f<sp/>*<sp/>f<sp/>+<sp/>g<sp/>*<sp/>g);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/sampling.h"/>
  </compounddef>
</doxygen>
