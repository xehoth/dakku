<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1Film" kind="class" language="C++" prot="public">
    <compoundname>dakku::Film</compoundname>
    <basecompoundref refid="classdakku_1_1SerializableObject" prot="public" virt="non-virtual">dakku::SerializableObject</basecompoundref>
    <includes refid="film_8h" local="no">film.h</includes>
    <innerclass refid="structdakku_1_1Film_1_1Pixel" prot="public">dakku::Film::Pixel</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdakku_1_1Film_1a428fa06a95483622e24fef64a6d8255a" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structdakku_1_1Film_1_1Pixel" kindref="compound">Pixel</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Pixel[]&gt; dakku::Film::pixels</definition>
        <argsstring></argsstring>
        <name>pixels</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>pixels data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="65" column="19" bodyfile="src/core/film.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1ad88e45f878fce2f808efa02e0d4d15f1" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref></type>
        <definition>Point2i dakku::Film::fullResolution</definition>
        <argsstring></argsstring>
        <name>fullResolution</name>
        <briefdescription>
<para>full resolution of the film </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="67" column="11" bodyfile="src/core/film.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1af37a20765786993f8e85f693da1aabae" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classdakku_1_1Filter" kindref="compound">Filter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Filter&gt; dakku::Film::filter</definition>
        <argsstring></argsstring>
        <name>filter</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>filter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="69" column="19" bodyfile="src/core/film.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1a4e50af430a0965655502f18ebcd3a720" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string dakku::Film::fileName</definition>
        <argsstring></argsstring>
        <name>fileName</name>
        <briefdescription>
<para>file name to save image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="71" column="21" bodyfile="src/core/film.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1ab903557a26253b8d83313dcc8d082162" prot="public" static="no" mutable="no">
        <type><ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref></type>
        <definition>Bounds2i dakku::Film::croppedPixelBounds</definition>
        <argsstring></argsstring>
        <name>croppedPixelBounds</name>
        <briefdescription>
<para>film crop window bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="73" column="12" bodyfile="src/core/film.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1a6fd4d08f6a29e54713a3972cd5a86afa" prot="public" static="no" mutable="no">
        <type>std::array&lt; float, <ref refid="classdakku_1_1Film_1a2761e7f49049136f7641e7eb9992aa3d" kindref="member">filterTableWidth</ref> *<ref refid="classdakku_1_1Film_1a2761e7f49049136f7641e7eb9992aa3d" kindref="member">filterTableWidth</ref> &gt;</type>
        <definition>std::array&lt;float, filterTableWidth * filterTableWidth&gt; dakku::Film::filterTable</definition>
        <argsstring></argsstring>
        <name>filterTable</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>filter table </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="79" column="14" bodyfile="src/core/film.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1a189e65e1fdac41477f8c4fbc953a6c79" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex dakku::Film::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
<para>mutex to protect tile merge </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="82" column="14" bodyfile="src/core/film.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1a59fba870ff465e7f3611cef64074c3f1" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float dakku::Film::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
<para>pixel value scale </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="85" column="15" bodyfile="src/core/film.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Film_1a388a8ca872d43f220b7efd79cccd84af" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float dakku::Film::maxSampleLuminance</definition>
        <argsstring></argsstring>
        <name>maxSampleLuminance</name>
        <briefdescription>
<para>max sample luminance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="88" column="15" bodyfile="src/core/film.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdakku_1_1Film_1a2761e7f49049136f7641e7eb9992aa3d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t dakku::Film::filterTableWidth</definition>
        <argsstring></argsstring>
        <name>filterTableWidth</name>
        <initializer>= 16</initializer>
        <briefdescription>
<para>filter table width </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="76" column="27" bodyfile="src/core/film.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1Film_1a246c871f2adf1dca61f541a9f8544b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Film::DAKKU_DECLARE_OBJECT</definition>
        <argsstring>(Film, SerializableObject)</argsstring>
        <name>DAKKU_DECLARE_OBJECT</name>
        <param>
          <type><ref refid="classdakku_1_1Film" kindref="compound">Film</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1SerializableObject" kindref="compound">SerializableObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="27" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Film_1ad8e4f2a09968ca20e9963575c573ef5d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Film::Film</definition>
        <argsstring>(const Point2i &amp;fullResolution, const Bounds2f &amp;cropWindow, std::unique_ptr&lt; Filter &gt; filter, std::string fileName, float scale, float maxSampleLuminance=INF)</argsstring>
        <name>Film</name>
        <param>
          <type>const <ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref> &amp;</type>
          <declname>fullResolution</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1abcc743bdeb62068a56f14ac3ef9963b7" kindref="member">Bounds2f</ref> &amp;</type>
          <declname>cropWindow</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classdakku_1_1Filter" kindref="compound">Filter</ref> &gt;</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxSampleLuminance</declname>
          <defval>INF</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Film" kindref="compound">Film</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fullResolution</parametername>
</parameternamelist>
<parameterdescription>
<para>full resolution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cropWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>crop window, default: $(0, 0) \times (1, 1)$ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>filter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>file name to save image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale the pixel value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSampleLuminance</parametername>
</parameternamelist>
<parameterdescription>
<para>max sample luminance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Film_1abd5500d780cda9eb7b512dc7ac1740d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void dakku::Film::serialize</definition>
        <argsstring>(OutputStream *stream) const override</argsstring>
        <name>serialize</name>
        <reimplements refid="classdakku_1_1SerializableObject_1afbd8e48383b89c71132d091c9cd8b023">serialize</reimplements>
        <param>
          <type><ref refid="classdakku_1_1OutputStream" kindref="compound">OutputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>serialize the object (do not include the property part) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="43" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Film_1a5c376ccf9abcdb293db2e9b9935b785c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void dakku::Film::deserialize</definition>
        <argsstring>(InputStream *stream) override</argsstring>
        <name>deserialize</name>
        <reimplements refid="classdakku_1_1SerializableObject_1af130034b07c1f5dc21fd84e0cbefbbb4">deserialize</reimplements>
        <param>
          <type><ref refid="classdakku_1_1InputStream" kindref="compound">InputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>deserialize the object (do not include the property part) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/film.h" line="44" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>film class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dakku::Film</label>
        <link refid="classdakku_1_1Film"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dakku::Object</label>
        <link refid="classdakku_1_1Object"/>
      </node>
      <node id="2">
        <label>dakku::SerializableObject</label>
        <link refid="classdakku_1_1SerializableObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>dakku::Bounds2&lt; int &gt;</label>
        <link refid="classdakku_1_1Bounds2"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>dakku::BoundsBase&lt; T, 2 &gt;</label>
        <link refid="classdakku_1_1BoundsBase"/>
      </node>
      <node id="4">
        <label>dakku::Point&lt; int &gt;</label>
        <link refid="classdakku_1_1Point"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>dakku::VectorBase&lt; T, S, Point&lt; T, S &gt; &gt;</label>
        <link refid="classdakku_1_1VectorBase"/>
      </node>
      <node id="1">
        <label>dakku::Film</label>
        <link refid="classdakku_1_1Film"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>fullResolution</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>croppedPixelBounds</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dakku::Object</label>
        <link refid="classdakku_1_1Object"/>
      </node>
      <node id="2">
        <label>dakku::SerializableObject</label>
        <link refid="classdakku_1_1SerializableObject"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/core/film.h" line="25" column="1" bodyfile="src/core/film.h" bodystart="25" bodyend="93"/>
    <listofallmembers>
      <member refid="classdakku_1_1Film_1ab903557a26253b8d83313dcc8d082162" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>croppedPixelBounds</name></member>
      <member refid="classdakku_1_1Film_1a246c871f2adf1dca61f541a9f8544b4b" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>DAKKU_DECLARE_OBJECT</name></member>
      <member refid="classdakku_1_1SerializableObject_1a20425307e474662b2825ca6fe0c3e1fc" prot="public" virt="non-virtual" ambiguityscope="dakku::SerializableObject::"><scope>dakku::Film</scope><name>DAKKU_DECLARE_OBJECT</name></member>
      <member refid="classdakku_1_1Film_1a5c376ccf9abcdb293db2e9b9935b785c" prot="public" virt="virtual"><scope>dakku::Film</scope><name>deserialize</name></member>
      <member refid="classdakku_1_1Film_1a4e50af430a0965655502f18ebcd3a720" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>fileName</name></member>
      <member refid="classdakku_1_1Film_1ad8e4f2a09968ca20e9963575c573ef5d" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>Film</name></member>
      <member refid="classdakku_1_1Film_1af37a20765786993f8e85f693da1aabae" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>filter</name></member>
      <member refid="classdakku_1_1Film_1a6fd4d08f6a29e54713a3972cd5a86afa" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>filterTable</name></member>
      <member refid="classdakku_1_1Film_1a2761e7f49049136f7641e7eb9992aa3d" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>filterTableWidth</name></member>
      <member refid="classdakku_1_1Film_1ad88e45f878fce2f808efa02e0d4d15f1" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>fullResolution</name></member>
      <member refid="classdakku_1_1Object_1a543f734268f7be81badecee6cf7245cc" prot="public" virt="virtual"><scope>dakku::Film</scope><name>getClassName</name></member>
      <member refid="classdakku_1_1Object_1a247ed68865f464d511b7fdb85467c354" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>getClassNameStatic</name></member>
      <member refid="classdakku_1_1Object_1accec0632e79097564677055bef4220bd" prot="public" virt="virtual"><scope>dakku::Film</scope><name>getParentName</name></member>
      <member refid="classdakku_1_1Object_1a08ec83c660afb1850455ef30c43fa29c" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>getParentNameStatic</name></member>
      <member refid="classdakku_1_1Object_1a055e32b0624d9a96fc2014fe5d9d0c81" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>isBaseOf</name></member>
      <member refid="classdakku_1_1Object_1add47b28fc1878f008bb6664a83faad72" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>isDerivedFrom</name></member>
      <member refid="classdakku_1_1Film_1a388a8ca872d43f220b7efd79cccd84af" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>maxSampleLuminance</name></member>
      <member refid="classdakku_1_1Film_1a189e65e1fdac41477f8c4fbc953a6c79" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>mutex</name></member>
      <member refid="classdakku_1_1Object_1a20e78d46fa11d575d63e048279150eac" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>Object</name></member>
      <member refid="classdakku_1_1Film_1a428fa06a95483622e24fef64a6d8255a" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>pixels</name></member>
      <member refid="classdakku_1_1Film_1a59fba870ff465e7f3611cef64074c3f1" prot="public" virt="non-virtual"><scope>dakku::Film</scope><name>scale</name></member>
      <member refid="classdakku_1_1Film_1abd5500d780cda9eb7b512dc7ac1740d5" prot="public" virt="virtual"><scope>dakku::Film</scope><name>serialize</name></member>
      <member refid="classdakku_1_1Object_1a65d91c04e480b827fa495df96af2826b" prot="public" virt="virtual"><scope>dakku::Film</scope><name>toString</name></member>
      <member refid="classdakku_1_1Object_1a0c792f089351caf3fa7a704c86ce903d" prot="public" virt="virtual"><scope>dakku::Film</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
