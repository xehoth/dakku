<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacedakku" kind="namespace" language="C++">
    <compoundname>dakku</compoundname>
    <innerclass refid="classdakku_1_1Bounds2" prot="public">dakku::Bounds2</innerclass>
    <innerclass refid="classdakku_1_1Bounds2iIterator" prot="public">dakku::Bounds2iIterator</innerclass>
    <innerclass refid="classdakku_1_1Bounds3" prot="public">dakku::Bounds3</innerclass>
    <innerclass refid="classdakku_1_1BoundsBase" prot="public">dakku::BoundsBase</innerclass>
    <innerclass refid="classdakku_1_1Class" prot="public">dakku::Class</innerclass>
    <innerclass refid="classdakku_1_1Logger" prot="public">dakku::Logger</innerclass>
    <innerclass refid="structdakku_1_1Matrix4x4" prot="public">dakku::Matrix4x4</innerclass>
    <innerclass refid="classdakku_1_1Normal" prot="public">dakku::Normal</innerclass>
    <innerclass refid="classdakku_1_1Object" prot="public">dakku::Object</innerclass>
    <innerclass refid="classdakku_1_1Point" prot="public">dakku::Point</innerclass>
    <innerclass refid="classdakku_1_1Property" prot="public">dakku::Property</innerclass>
    <innerclass refid="classdakku_1_1Ray" prot="public">dakku::Ray</innerclass>
    <innerclass refid="classdakku_1_1RayDifferential" prot="public">dakku::RayDifferential</innerclass>
    <innerclass refid="classdakku_1_1Transform" prot="public">dakku::Transform</innerclass>
    <innerclass refid="classdakku_1_1Vector" prot="public">dakku::Vector</innerclass>
    <innerclass refid="classdakku_1_1VectorBase" prot="public">dakku::VectorBase</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfca" prot="public" static="no" strong="yes">
        <type></type>
        <name>PropertyType</name>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaacb4fb1757fb37c43cded35d3eb857c43" prot="public">
          <name>ARRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa8eee8e217391199668cbac89472ace53" prot="public">
          <name>OBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa34f55eca38e0605a84f169ff61a2a396" prot="public">
          <name>NUMBER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa63b588d5559f64f89a416e656880b949" prot="public">
          <name>STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa87752381b583740610f1dfeb07fdad7e" prot="public">
          <name>VECTOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaadceae9409e3ff24c6c0af99860ba44ac" prot="public">
          <name>TRANSFORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>property type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/property.h" line="15" column="1" bodyfile="src/core/property.h" bodystart="15" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedakku_1abcc743bdeb62068a56f14ac3ef9963b7" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds2f = typedef Bounds2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2f</name>
        <briefdescription>
<para>2d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="230" column="1" bodyfile="src/core/bounds.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; int &gt;</type>
        <definition>using dakku::Bounds2i = typedef Bounds2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2i</name>
        <briefdescription>
<para>2d int bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="232" column="1" bodyfile="src/core/bounds.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a19129587abbff965c2c15bab5723e208" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds3" kindref="compound">Bounds3</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds3f = typedef Bounds3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds3f</name>
        <briefdescription>
<para>3d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="247" column="1" bodyfile="src/core/bounds.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae7de7b89895e76d4a3f1c653393dde69" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>using dakku::Vector2 = typedef Vector&lt;T, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2</name>
        <briefdescription>
<para>2d vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="93" column="1" bodyfile="src/core/vector.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a3109ad27ee688fdd3462458714d7f1e7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Vector3 = typedef Vector&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3</name>
        <briefdescription>
<para>3d vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="101" column="1" bodyfile="src/core/vector.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1abfd5a177365f8ffec7ab23d6cb6db8c0" prot="public" static="no">
        <type><ref refid="namespacedakku_1ae7de7b89895e76d4a3f1c653393dde69" kindref="member">Vector2</ref>&lt; float &gt;</type>
        <definition>using dakku::Vector2f = typedef Vector2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2f</name>
        <briefdescription>
<para>2d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="104" column="1" bodyfile="src/core/vector.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" prot="public" static="no">
        <type><ref refid="namespacedakku_1a3109ad27ee688fdd3462458714d7f1e7" kindref="member">Vector3</ref>&lt; float &gt;</type>
        <definition>using dakku::Vector3f = typedef Vector3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3f</name>
        <briefdescription>
<para>3d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="106" column="1" bodyfile="src/core/vector.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; T, 2 &gt;</type>
        <definition>using dakku::Point2 = typedef Point&lt;T, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Point2</name>
        <briefdescription>
<para>2d point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="114" column="1" bodyfile="src/core/vector.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1aace4734db951234de5eb4567db0d1737" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Point3 = typedef Point&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Point3</name>
        <briefdescription>
<para>3d point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="122" column="1" bodyfile="src/core/vector.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a9910f23501fd2ef5e9a829cdab0992be" prot="public" static="no">
        <type><ref refid="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" kindref="member">Point2</ref>&lt; float &gt;</type>
        <definition>using dakku::Point2f = typedef Point2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Point2f</name>
        <briefdescription>
<para>2d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="125" column="1" bodyfile="src/core/vector.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" prot="public" static="no">
        <type><ref refid="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" kindref="member">Point2</ref>&lt; int &gt;</type>
        <definition>using dakku::Point2i = typedef Point2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Point2i</name>
        <briefdescription>
<para>2d int point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="127" column="1" bodyfile="src/core/vector.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" prot="public" static="no">
        <type><ref refid="namespacedakku_1aace4734db951234de5eb4567db0d1737" kindref="member">Point3</ref>&lt; float &gt;</type>
        <definition>using dakku::Point3f = typedef Point3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Point3f</name>
        <briefdescription>
<para>3d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="129" column="1" bodyfile="src/core/vector.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ade3699e7ff88bf28ae0ea31baafab11c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Normal" kindref="compound">Normal</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Normal3 = typedef Normal&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Normal3</name>
        <briefdescription>
<para>3d normal </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="137" column="1" bodyfile="src/core/vector.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a9b64e14dceffe6ac84029f1d40d6ec41" prot="public" static="no">
        <type><ref refid="namespacedakku_1ade3699e7ff88bf28ae0ea31baafab11c" kindref="member">Normal3</ref>&lt; float &gt;</type>
        <definition>using dakku::Normal3f = typedef Normal3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Normal3f</name>
        <briefdescription>
<para>3d float normal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="139" column="1" bodyfile="src/core/vector.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedakku_1a53c476552ecb27caba955675d8efb680" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::INF</definition>
        <argsstring></argsstring>
        <name>INF</name>
        <initializer>= std::numeric_limits&lt;float&gt;::infinity()</initializer>
        <briefdescription>
<para>infinity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="18" column="24" bodyfile="src/core/fwd.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1af7aa9dc8532b3506d50b84f932560eb0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::PI</definition>
        <argsstring></argsstring>
        <name>PI</name>
        <initializer>= std::numbers::pi_v&lt;float&gt;</initializer>
        <briefdescription>
<para>PI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="21" column="24" bodyfile="src/core/fwd.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a96416914fd138a9ad1724211806eaadc" prot="public" static="no" mutable="no">
        <type>class <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Property</definition>
        <argsstring></argsstring>
        <name>Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="69" column="24" bodyfile="src/core/fwd.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a5e92e662fd955a5d5e138ec343496ecb" prot="public" static="no" mutable="no">
        <type>class <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Class</definition>
        <argsstring></argsstring>
        <name>Class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="70" column="24" bodyfile="src/core/fwd.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a814749a6cf3cd7575912f5119a5be6ad" prot="public" static="no" mutable="no">
        <type>class <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="71" column="24" bodyfile="src/core/fwd.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1afb9578030bac745ae0282d66d44df22c" prot="public" static="no" mutable="no">
        <type>struct <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>struct DAKKU_EXPORT_CORE dakku::Matrix4x4</definition>
        <argsstring></argsstring>
        <name>Matrix4x4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="72" column="24" bodyfile="src/core/fwd.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedakku_1af0a2453f8db3eb948901c7a0aed18434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::begin</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>begin</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>begin of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="296" column="25" bodyfile="src/core/bounds.h" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a41ae9fcb2290e6ea6f7d4b0fbca86d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::end</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>end</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>end of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="304" column="25" bodyfile="src/core/bounds.h" bodystart="304" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af754e4967f947036a0c31c0dbb4bf6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isNaN</definition>
        <argsstring>(T x)</argsstring>
        <name>isNaN</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
    <requiresclause>std::is_floating_point_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (floating point) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether <computeroutput>x</computeroutput> is nan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="39" column="21" bodyfile="src/core/fwd.h" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af703ca0ba560169d1daf114a07175bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isNaN</definition>
        <argsstring>(T)</argsstring>
        <name>isNaN</name>
        <param>
          <type>T</type>
        </param>
    <requiresclause>std::is_integral_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false (all integers are not nans) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="50" column="21" bodyfile="src/core/fwd.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2a53414d45143151128b45997c42d7af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::radians</definition>
        <argsstring>(float deg)</argsstring>
        <name>radians</name>
        <param>
          <type>float</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
<para>convert degrees to radians </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deg</parametername>
</parameternamelist>
<parameterdescription>
<para>given degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the radian of deg </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="58" column="14" bodyfile="src/core/fwd.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a3d1bddf363d9216df7df7c148f917cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::degrees</definition>
        <argsstring>(float rad)</argsstring>
        <name>degrees</name>
        <param>
          <type>float</type>
          <declname>rad</declname>
        </param>
        <briefdescription>
<para>convert radians to degrees </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rad</parametername>
</parameternamelist>
<parameterdescription>
<para>the given radian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the degree of rad </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="66" column="14" bodyfile="src/core/fwd.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a1e461427d5e700eff84e148509b7fcba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::translate</definition>
        <argsstring>(const Vector3f &amp;delta)</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>translate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="286" column="29" declfile="src/core/transform.h" declline="286" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a7acbd19453bccf5b94cfa1133df02981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::scale</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>scale </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="292" column="29" declfile="src/core/transform.h" declline="292" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a9a343fe7cec03ad3c562a926fc052f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateX</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateX</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through x axis </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="298" column="29" declfile="src/core/transform.h" declline="298" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a6ddc73eb8238f15d8c1016069962e8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateY</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateY</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through y axis </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DAKKU_EXPORT_CORE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="306" column="29" declfile="src/core/transform.h" declline="306" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2bbb040f4ba3ff426a543ad8129195de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateZ</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateZ</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through z axis </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DAKKU_EXPORT_CORE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="314" column="29" declfile="src/core/transform.h" declline="314" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a5158202b82b35e77f9fc61285161488a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotate</definition>
        <argsstring>(float theta, const Vector3f &amp;axis)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>rotate through <computeroutput>axis</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>given axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="322" column="29" declfile="src/core/transform.h" declline="322" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1aaa536865ee7be0b7a4ed6109f261eeb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::lookAt</definition>
        <argsstring>(const Point3f &amp;pos, const Point3f &amp;look, const Vector3f &amp;refUp)</argsstring>
        <name>lookAt</name>
        <param>
          <type>const <ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref> &amp;</type>
          <declname>look</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>refUp</declname>
        </param>
        <briefdescription>
<para>look at </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>camera position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>look</parametername>
</parameternamelist>
<parameterdescription>
<para>camera look direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refUp</parametername>
</parameternamelist>
<parameterdescription>
<para>reference up vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="331" column="29" declfile="src/core/transform.h" declline="331" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a027a77f92f8ae36b091ef409ec0b4c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::perspective</definition>
        <argsstring>(float fov, float znear, float zfar)</argsstring>
        <name>perspective</name>
        <param>
          <type>float</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>znear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zfar</declname>
        </param>
        <briefdescription>
<para>perspective transform </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>field of view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>znear</parametername>
</parameternamelist>
<parameterdescription>
<para>far plane z </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zfar</parametername>
</parameternamelist>
<parameterdescription>
<para>near plane z</para>
</parameterdescription>
</parameteritem>
</parameterlist>
the shorter edge mapped to [-1, 1], the longer [-ratio, ratio] left handed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="344" column="29" declfile="src/core/transform.h" declline="344" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2016f3c3a16c069a055a7017eacb0e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename D1</type>
          </param>
          <param>
            <type>typename D2</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::dot</definition>
        <argsstring>(const VectorBase&lt; T, S, D1 &gt; &amp;a, const VectorBase&lt; T, S, D2 &gt; &amp;b)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D2 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>dot product between two vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec a$ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>$\vec a \cdot \vec b$ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="724" column="17" bodyfile="src/core/vector_base.h" bodystart="724" bodyend="727"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dakku namespace </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/bounds.h" line="7" column="1"/>
  </compounddef>
</doxygen>
