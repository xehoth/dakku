<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacedakku" kind="namespace" language="C++">
    <compoundname>dakku</compoundname>
    <innerclass refid="classdakku_1_1BlockedArray" prot="public">dakku::BlockedArray</innerclass>
    <innerclass refid="classdakku_1_1Bounds2" prot="public">dakku::Bounds2</innerclass>
    <innerclass refid="classdakku_1_1Bounds2iIterator" prot="public">dakku::Bounds2iIterator</innerclass>
    <innerclass refid="classdakku_1_1Bounds3" prot="public">dakku::Bounds3</innerclass>
    <innerclass refid="classdakku_1_1BoundsBase" prot="public">dakku::BoundsBase</innerclass>
    <innerclass refid="classdakku_1_1BoxFilter" prot="public">dakku::BoxFilter</innerclass>
    <innerclass refid="classdakku_1_1Camera" prot="public">dakku::Camera</innerclass>
    <innerclass refid="structdakku_1_1CameraSample" prot="public">dakku::CameraSample</innerclass>
    <innerclass refid="classdakku_1_1Class" prot="public">dakku::Class</innerclass>
    <innerclass refid="classdakku_1_1CoefficientSpectrum" prot="public">dakku::CoefficientSpectrum</innerclass>
    <innerclass refid="classdakku_1_1ConstantTexture" prot="public">dakku::ConstantTexture</innerclass>
    <innerclass refid="classdakku_1_1FileInputStream" prot="public">dakku::FileInputStream</innerclass>
    <innerclass refid="classdakku_1_1FileOutputStream" prot="public">dakku::FileOutputStream</innerclass>
    <innerclass refid="classdakku_1_1Film" prot="public">dakku::Film</innerclass>
    <innerclass refid="classdakku_1_1FilmImageProvider" prot="public">dakku::FilmImageProvider</innerclass>
    <innerclass refid="classdakku_1_1FilmTile" prot="public">dakku::FilmTile</innerclass>
    <innerclass refid="structdakku_1_1FilmTilePixel" prot="public">dakku::FilmTilePixel</innerclass>
    <innerclass refid="classdakku_1_1Filter" prot="public">dakku::Filter</innerclass>
    <innerclass refid="classdakku_1_1GuiEngine" prot="public">dakku::GuiEngine</innerclass>
    <innerclass refid="classdakku_1_1ImageTexture" prot="public">dakku::ImageTexture</innerclass>
    <innerclass refid="classdakku_1_1InputStream" prot="public">dakku::InputStream</innerclass>
    <innerclass refid="structdakku_1_1Interaction" prot="public">dakku::Interaction</innerclass>
    <innerclass refid="classdakku_1_1L1CacheLineAlignedResource" prot="public">dakku::L1CacheLineAlignedResource</innerclass>
    <innerclass refid="classdakku_1_1Logger" prot="public">dakku::Logger</innerclass>
    <innerclass refid="structdakku_1_1Matrix4x4" prot="public">dakku::Matrix4x4</innerclass>
    <innerclass refid="classdakku_1_1MemoryArena" prot="public">dakku::MemoryArena</innerclass>
    <innerclass refid="classdakku_1_1MipMap" prot="public">dakku::MipMap</innerclass>
    <innerclass refid="classdakku_1_1Normal" prot="public">dakku::Normal</innerclass>
    <innerclass refid="classdakku_1_1Object" prot="public">dakku::Object</innerclass>
    <innerclass refid="classdakku_1_1OutputStream" prot="public">dakku::OutputStream</innerclass>
    <innerclass refid="classdakku_1_1PerspectiveCamera" prot="public">dakku::PerspectiveCamera</innerclass>
    <innerclass refid="classdakku_1_1PixelSampler" prot="public">dakku::PixelSampler</innerclass>
    <innerclass refid="classdakku_1_1Point" prot="public">dakku::Point</innerclass>
    <innerclass refid="classdakku_1_1ProjectiveCamera" prot="public">dakku::ProjectiveCamera</innerclass>
    <innerclass refid="classdakku_1_1Property" prot="public">dakku::Property</innerclass>
    <innerclass refid="classdakku_1_1Ray" prot="public">dakku::Ray</innerclass>
    <innerclass refid="classdakku_1_1RayDifferential" prot="public">dakku::RayDifferential</innerclass>
    <innerclass refid="classdakku_1_1RelativeRoot" prot="public">dakku::RelativeRoot</innerclass>
    <innerclass refid="classdakku_1_1RenderState" prot="public">dakku::RenderState</innerclass>
    <innerclass refid="structdakku_1_1ResampleWeight" prot="public">dakku::ResampleWeight</innerclass>
    <innerclass refid="classdakku_1_1RgbSpectrum" prot="public">dakku::RgbSpectrum</innerclass>
    <innerclass refid="classdakku_1_1RNG" prot="public">dakku::RNG</innerclass>
    <innerclass refid="classdakku_1_1Sampler" prot="public">dakku::Sampler</innerclass>
    <innerclass refid="classdakku_1_1SerializableObject" prot="public">dakku::SerializableObject</innerclass>
    <innerclass refid="classdakku_1_1Shape" prot="public">dakku::Shape</innerclass>
    <innerclass refid="classdakku_1_1SurfaceInteraction" prot="public">dakku::SurfaceInteraction</innerclass>
    <innerclass refid="classdakku_1_1Texture" prot="public">dakku::Texture</innerclass>
    <innerclass refid="classdakku_1_1TextureMapping2D" prot="public">dakku::TextureMapping2D</innerclass>
    <innerclass refid="classdakku_1_1Transform" prot="public">dakku::Transform</innerclass>
    <innerclass refid="classdakku_1_1TransformCache" prot="public">dakku::TransformCache</innerclass>
    <innerclass refid="classdakku_1_1TriangleFilter" prot="public">dakku::TriangleFilter</innerclass>
    <innerclass refid="classdakku_1_1UvMapping2D" prot="public">dakku::UvMapping2D</innerclass>
    <innerclass refid="classdakku_1_1Vector" prot="public">dakku::Vector</innerclass>
    <innerclass refid="classdakku_1_1VectorBase" prot="public">dakku::VectorBase</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacedakku_1a9f69e6875268e5345a38fd61108935dc" prot="public" static="no" strong="yes">
        <type></type>
        <name>ImageWrapMode</name>
        <enumvalue id="namespacedakku_1a9f69e6875268e5345a38fd61108935dca5be68175be14dfaa080165456c2e9555" prot="public">
          <name>REPEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a9f69e6875268e5345a38fd61108935dca08d0012388564e95c3b4a7407cf04965" prot="public">
          <name>BLACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a9f69e6875268e5345a38fd61108935dcaecf301fe86e23bb2bf5155bbef3b1345" prot="public">
          <name>CLAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>image wrap mode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/mipmap.h" line="15" column="1" bodyfile="src/core/mipmap.h" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="enum" id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfca" prot="public" static="no" strong="yes">
        <type></type>
        <name>PropertyType</name>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaacb4fb1757fb37c43cded35d3eb857c43" prot="public">
          <name>ARRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa8eee8e217391199668cbac89472ace53" prot="public">
          <name>OBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa34f55eca38e0605a84f169ff61a2a396" prot="public">
          <name>NUMBER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa63b588d5559f64f89a416e656880b949" prot="public">
          <name>STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaa87752381b583740610f1dfeb07fdad7e" prot="public">
          <name>VECTOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacedakku_1a61a88f7b109506521f2be6050dc9bfcaadceae9409e3ff24c6c0af99860ba44ac" prot="public">
          <name>TRANSFORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>property type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/property.h" line="15" column="1" bodyfile="src/core/property.h" bodystart="15" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedakku_1abcc743bdeb62068a56f14ac3ef9963b7" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds2f = typedef Bounds2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2f</name>
        <briefdescription>
<para>2d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="237" column="1" bodyfile="src/core/bounds.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; int &gt;</type>
        <definition>using dakku::Bounds2i = typedef Bounds2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2i</name>
        <briefdescription>
<para>2d int bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="239" column="1" bodyfile="src/core/bounds.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a19129587abbff965c2c15bab5723e208" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds3" kindref="compound">Bounds3</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds3f = typedef Bounds3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds3f</name>
        <briefdescription>
<para>3d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="254" column="1" bodyfile="src/core/bounds.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a72f253f8c73b2ec7fef8e3c83c0eac17" prot="public" static="no">
        <type><ref refid="classdakku_1_1RgbSpectrum" kindref="compound">RgbSpectrum</ref></type>
        <definition>using dakku::Spectrum = typedef RgbSpectrum</definition>
        <argsstring></argsstring>
        <name>Spectrum</name>
        <briefdescription>
<para>Spectrum type: use <ref refid="classdakku_1_1RgbSpectrum" kindref="compound">RgbSpectrum</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="164" column="1" bodyfile="src/core/fwd.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae7de7b89895e76d4a3f1c653393dde69" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>using dakku::Vector2 = typedef Vector&lt;T, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2</name>
        <briefdescription>
<para>2d vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="93" column="1" bodyfile="src/core/vector.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a3109ad27ee688fdd3462458714d7f1e7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Vector3 = typedef Vector&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3</name>
        <briefdescription>
<para>3d vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="101" column="1" bodyfile="src/core/vector.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1abfd5a177365f8ffec7ab23d6cb6db8c0" prot="public" static="no">
        <type><ref refid="namespacedakku_1ae7de7b89895e76d4a3f1c653393dde69" kindref="member">Vector2</ref>&lt; float &gt;</type>
        <definition>using dakku::Vector2f = typedef Vector2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2f</name>
        <briefdescription>
<para>2d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="104" column="1" bodyfile="src/core/vector.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" prot="public" static="no">
        <type><ref refid="namespacedakku_1a3109ad27ee688fdd3462458714d7f1e7" kindref="member">Vector3</ref>&lt; float &gt;</type>
        <definition>using dakku::Vector3f = typedef Vector3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3f</name>
        <briefdescription>
<para>3d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="106" column="1" bodyfile="src/core/vector.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; T, 2 &gt;</type>
        <definition>using dakku::Point2 = typedef Point&lt;T, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Point2</name>
        <briefdescription>
<para>2d point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="114" column="1" bodyfile="src/core/vector.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1aace4734db951234de5eb4567db0d1737" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Point3 = typedef Point&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Point3</name>
        <briefdescription>
<para>3d point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="122" column="1" bodyfile="src/core/vector.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a9910f23501fd2ef5e9a829cdab0992be" prot="public" static="no">
        <type><ref refid="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" kindref="member">Point2</ref>&lt; float &gt;</type>
        <definition>using dakku::Point2f = typedef Point2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Point2f</name>
        <briefdescription>
<para>2d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="125" column="1" bodyfile="src/core/vector.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" prot="public" static="no">
        <type><ref refid="namespacedakku_1a56669db36360e52f7c7113768c7b35aa" kindref="member">Point2</ref>&lt; int &gt;</type>
        <definition>using dakku::Point2i = typedef Point2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Point2i</name>
        <briefdescription>
<para>2d int point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="127" column="1" bodyfile="src/core/vector.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" prot="public" static="no">
        <type><ref refid="namespacedakku_1aace4734db951234de5eb4567db0d1737" kindref="member">Point3</ref>&lt; float &gt;</type>
        <definition>using dakku::Point3f = typedef Point3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Point3f</name>
        <briefdescription>
<para>3d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="129" column="1" bodyfile="src/core/vector.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ade3699e7ff88bf28ae0ea31baafab11c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdakku_1_1Normal" kindref="compound">Normal</ref>&lt; T, 3 &gt;</type>
        <definition>using dakku::Normal3 = typedef Normal&lt;T, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Normal3</name>
        <briefdescription>
<para>3d normal </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="137" column="1" bodyfile="src/core/vector.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a9b64e14dceffe6ac84029f1d40d6ec41" prot="public" static="no">
        <type><ref refid="namespacedakku_1ade3699e7ff88bf28ae0ea31baafab11c" kindref="member">Normal3</ref>&lt; float &gt;</type>
        <definition>using dakku::Normal3f = typedef Normal3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Normal3f</name>
        <briefdescription>
<para>3d float normal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="139" column="1" bodyfile="src/core/vector.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedakku_1a53c476552ecb27caba955675d8efb680" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::INF</definition>
        <argsstring></argsstring>
        <name>INF</name>
        <initializer>= std::numeric_limits&lt;float&gt;::infinity()</initializer>
        <briefdescription>
<para>infinity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="20" column="24" bodyfile="src/core/fwd.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1af7aa9dc8532b3506d50b84f932560eb0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::PI</definition>
        <argsstring></argsstring>
        <name>PI</name>
        <initializer>= std::numbers::pi_v&lt;float&gt;</initializer>
        <briefdescription>
<para>PI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="23" column="24" bodyfile="src/core/fwd.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a09eee35861f6da88754b5645e5703ec4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t dakku::L1_CACHE_LINE_SIZE</definition>
        <argsstring></argsstring>
        <name>L1_CACHE_LINE_SIZE</name>
        <initializer>= 64</initializer>
        <briefdescription>
<para>L1 cache line size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="26" column="25" bodyfile="src/core/fwd.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a8ecbddd8386198d0dd187cd20b53e42d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::SHADOW_EPS</definition>
        <argsstring></argsstring>
        <name>SHADOW_EPS</name>
        <initializer>= 1e-4f</initializer>
        <briefdescription>
<para>shadow epsilon, used for shadow ray, offset ray origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="29" column="24" bodyfile="src/core/fwd.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a204f33930db458865d7f796fd768055d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::ONE_MINUS_EPSILON</definition>
        <argsstring></argsstring>
        <name>ONE_MINUS_EPSILON</name>
        <initializer>=
    1 - std::numeric_limits&lt;float&gt;::epsilon()</initializer>
        <briefdescription>
<para>1 - eps </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="31" column="24" bodyfile="src/core/fwd.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1ab81d04f25c58c43667816d47b70f4734" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::RelativeRoot</definition>
        <argsstring></argsstring>
        <name>RelativeRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="138" column="24" bodyfile="src/core/fwd.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a60d80eeb1de44e0299e91a45d8f94446" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::InputStream</definition>
        <argsstring></argsstring>
        <name>InputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="139" column="24" bodyfile="src/core/fwd.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a04dac11edaf26a2e58c8d00f31e6fa29" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::OutputStream</definition>
        <argsstring></argsstring>
        <name>OutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="140" column="24" bodyfile="src/core/fwd.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a96416914fd138a9ad1724211806eaadc" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Property</definition>
        <argsstring></argsstring>
        <name>Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="143" column="24" bodyfile="src/core/fwd.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a5e92e662fd955a5d5e138ec343496ecb" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Class</definition>
        <argsstring></argsstring>
        <name>Class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="144" column="24" bodyfile="src/core/fwd.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a814749a6cf3cd7575912f5119a5be6ad" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="145" column="24" bodyfile="src/core/fwd.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1afb9578030bac745ae0282d66d44df22c" prot="public" static="no" mutable="no">
        <type>struct <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>struct DAKKU_EXPORT_CORE dakku::Matrix4x4</definition>
        <argsstring></argsstring>
        <name>Matrix4x4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="146" column="24" bodyfile="src/core/fwd.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1ad32aa25f5584289eda626b47ae3525cc" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Filter</definition>
        <argsstring></argsstring>
        <name>Filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="157" column="24" bodyfile="src/core/fwd.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a1bd6403f2998d6f8d22f87c99eca7eed" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Film</definition>
        <argsstring></argsstring>
        <name>Film</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="158" column="24" bodyfile="src/core/fwd.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1ad4c70953467b9d3d22eac250d8655aff" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Shape</definition>
        <argsstring></argsstring>
        <name>Shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="167" column="24" bodyfile="src/core/fwd.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a24e2c761467417bba0b7b17b7c0e9f79" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Texture</definition>
        <argsstring></argsstring>
        <name>Texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="168" column="24" bodyfile="src/core/fwd.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a91583977767aa3566783f8ab2c0538a7" prot="public" static="no" mutable="no">
        <type>class <ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>class DAKKU_EXPORT_CORE dakku::Camera</definition>
        <argsstring></argsstring>
        <name>Camera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="170" column="24" bodyfile="src/core/fwd.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1ad67fc67650e8ff59c3b25b9e9d462ee4" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dakku::__pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/mipmap.h" line="1" column="0" bodyfile="src/core/mipmap.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a041d325d33710e961b70ab2cf4dbfa11" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint64_t</type>
        <definition>constexpr std::uint64_t dakku::PCG32_DEFAULT_STATE</definition>
        <argsstring></argsstring>
        <name>PCG32_DEFAULT_STATE</name>
        <initializer>= 0x853c49e6748fea9bull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/rng.h" line="7" column="32" bodyfile="src/core/rng.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a86dfefa53a11b2cf2d06aaa75171fe3a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint64_t</type>
        <definition>constexpr std::uint64_t dakku::PCG32_DEFAULT_STREAM</definition>
        <argsstring></argsstring>
        <name>PCG32_DEFAULT_STREAM</name>
        <initializer>= 0xda3e39cb94b95bdbull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/rng.h" line="8" column="32" bodyfile="src/core/rng.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1ac3bbfb2d54532e5e73bf8206d1323600" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint64_t</type>
        <definition>constexpr std::uint64_t dakku::PCG32_MULT</definition>
        <argsstring></argsstring>
        <name>PCG32_MULT</name>
        <initializer>= 0x5851f42d4c957f2dull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/rng.h" line="9" column="32" bodyfile="src/core/rng.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1af9f5f7a876a1c02de56e9fa106171eda" prot="public" static="no" mutable="no">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1RenderState" kindref="compound">RenderState</ref></type>
        <definition>DAKKU_EXPORT_CORE RenderState dakku::renderState</definition>
        <argsstring></argsstring>
        <name>renderState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/state.h" line="23" column="38" declfile="src/core/state.h" declline="23" declcolumn="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedakku_1a4289fc5c55c00b2a466d37dfdacc67dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_EXPORT_OBJECTS</definition>
        <argsstring>(Cameras, PerspectiveCamera)</argsstring>
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param>
          <type>Cameras</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1PerspectiveCamera" kindref="compound">PerspectiveCamera</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cameras/api.h" line="7" column="1" declfile="src/cameras/api.h" declline="7" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ad38f3dc8712fc913b351b2143d85fe79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_EXPORT_OBJECTS</definition>
        <argsstring>(Core, Object, InputStream, OutputStream, SerializableObject, Filter, Film, Texture, TextureMapping2D, UvMapping2D, Shape, Camera, ProjectiveCamera, Sampler, PixelSampler)</argsstring>
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param>
          <type>Core</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Object" kindref="compound">Object</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1InputStream" kindref="compound">InputStream</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1OutputStream" kindref="compound">OutputStream</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1SerializableObject" kindref="compound">SerializableObject</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Filter" kindref="compound">Filter</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Film" kindref="compound">Film</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Texture" kindref="compound">Texture</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1TextureMapping2D" kindref="compound">TextureMapping2D</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1UvMapping2D" kindref="compound">UvMapping2D</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Shape" kindref="compound">Shape</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Camera" kindref="compound">Camera</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1ProjectiveCamera" kindref="compound">ProjectiveCamera</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Sampler" kindref="compound">Sampler</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1PixelSampler" kindref="compound">PixelSampler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/api.h" line="19" column="1" declfile="src/core/api.h" declline="19" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af0a2453f8db3eb948901c7a0aed18434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::begin</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>begin</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>begin of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="303" column="25" bodyfile="src/core/bounds.h" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a41ae9fcb2290e6ea6f7d4b0fbca86d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::end</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>end</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>end of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="311" column="25" bodyfile="src/core/bounds.h" bodystart="311" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af754e4967f947036a0c31c0dbb4bf6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isNaN</definition>
        <argsstring>(T x)</argsstring>
        <name>isNaN</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
    <requiresclause>std::is_floating_point_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (floating point) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether <computeroutput>x</computeroutput> is nan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="50" column="21" bodyfile="src/core/fwd.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af703ca0ba560169d1daf114a07175bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isNaN</definition>
        <argsstring>(T)</argsstring>
        <name>isNaN</name>
        <param>
          <type>T</type>
        </param>
    <requiresclause>std::is_integral_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false (all integers are not nans) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="61" column="21" bodyfile="src/core/fwd.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2a53414d45143151128b45997c42d7af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::radians</definition>
        <argsstring>(float deg)</argsstring>
        <name>radians</name>
        <param>
          <type>float</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
<para>convert degrees to radians </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deg</parametername>
</parameternamelist>
<parameterdescription>
<para>given degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the radian of deg </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="69" column="14" bodyfile="src/core/fwd.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a3d1bddf363d9216df7df7c148f917cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::degrees</definition>
        <argsstring>(float rad)</argsstring>
        <name>degrees</name>
        <param>
          <type>float</type>
          <declname>rad</declname>
        </param>
        <briefdescription>
<para>convert radians to degrees </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rad</parametername>
</parameternamelist>
<parameterdescription>
<para>the given radian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the degree of rad </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="77" column="14" bodyfile="src/core/fwd.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a7b74e38fede77ac78a98a577ae8eff7c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool dakku::isPowerOf2</definition>
        <argsstring>(T v)</argsstring>
        <name>isPowerOf2</name>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
    <requiresclause>std::is_integral_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>v</computeroutput> is power of 2 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>integer type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="87" column="23" bodyfile="src/core/fwd.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a0d82bdc5016a1bcbb43a0a37c068be53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t dakku::roundUpPow2</definition>
        <argsstring>(std::int32_t v)</argsstring>
        <name>roundUpPow2</name>
        <param>
          <type>std::int32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>round up to nearest value which is power of 2 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="93" column="21" bodyfile="src/core/fwd.h" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af5b2aaaf6403e90c77a4746ff984db8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::evalLanczos</definition>
        <argsstring>(float x, float tau=2)</argsstring>
        <name>evalLanczos</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tau</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="103" column="14" bodyfile="src/core/fwd.h" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a41d1cd0b3579a6b8c5e22ab4e2146f00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int dakku::log2Int</definition>
        <argsstring>(std::int32_t v)</argsstring>
        <name>log2Int</name>
        <param>
          <type>std::int32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>$\lfloor \log_2 v \rfloor$ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="117" column="12" bodyfile="src/core/fwd.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a66eb6977bab34786fa743859b0ffc52d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int dakku::log2Int</definition>
        <argsstring>(std::int64_t v)</argsstring>
        <name>log2Int</name>
        <param>
          <type>std::int64_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>$\lfloor \log_2 v \rfloor$ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="125" column="12" bodyfile="src/core/fwd.h" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a837463872226179eb46dde52c558f1c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dakku::lerp</definition>
        <argsstring>(T a, T b, T t)</argsstring>
        <name>lerp</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>linear interpolation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/fwd.h" line="134" column="10" bodyfile="src/core/fwd.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a5dc6c62020f3cb484153c43801d71ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::maxAnisotropy</definition>
        <argsstring>(maxAnisotropy)</argsstring>
        <name>maxAnisotropy</name>
        <param>
          <type>maxAnisotropy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/mipmap.h" line="117" column="7"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a3daeac9348858af9dbb1a9c0415f5f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::wrapMode</definition>
        <argsstring>(wrapMode)</argsstring>
        <name>wrapMode</name>
        <param>
          <type>wrapMode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/mipmap.h" line="118" column="7"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ad153e9f37e7a43e9abe4762557e4a187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::resolution</definition>
        <argsstring>(std::move(resolution))</argsstring>
        <name>resolution</name>
        <param>
          <type>std::move(resolution)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/mipmap.h" line="119" column="7" bodyfile="src/core/mipmap.h" bodystart="119" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ac5c65853b3b4155436da5b4402bebcad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::registerObjects</definition>
        <argsstring>()</argsstring>
        <name>registerObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/object.h" line="68" column="13" bodyfile="src/core/object.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ac70f11ace3ab613579837a2d336b38c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref></type>
        <definition>Point3f dakku::offsetRayOrigin</definition>
        <argsstring>(const Point3f &amp;p, const Normal3f &amp;n, const Vector3f &amp;w)</argsstring>
        <name>offsetRayOrigin</name>
        <param>
          <type>const <ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1a9b64e14dceffe6ac84029f1d40d6ec41" kindref="member">Normal3f</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>offset ray origin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>ray origin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>normal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the origin after offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/ray.h" line="100" column="16" bodyfile="src/core/ray.h" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a80d2f8350cdcc84f6586fed5f396f8c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dakku::xyzToRgb</definition>
        <argsstring>(std::span&lt; const float, 3 &gt; xyz, std::span&lt; float, 3 &gt; rgb)</argsstring>
        <name>xyzToRgb</name>
        <param>
          <type>std::span&lt; const float, 3 &gt;</type>
          <declname>xyz</declname>
        </param>
        <param>
          <type>std::span&lt; float, 3 &gt;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para>xyz to rgb </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/spectrum.h" line="11" column="13" bodyfile="src/core/spectrum.h" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a4eafe1eaa4b431b45c002f81b793b46f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dakku::rgbToXyz</definition>
        <argsstring>(std::span&lt; const float, 3 &gt; rgb, std::span&lt; float, 3 &gt; xyz)</argsstring>
        <name>rgbToXyz</name>
        <param>
          <type>std::span&lt; const float, 3 &gt;</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>std::span&lt; float, 3 &gt;</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
<para>rgb to xyz </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/spectrum.h" line="21" column="13" bodyfile="src/core/spectrum.h" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a1e461427d5e700eff84e148509b7fcba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::translate</definition>
        <argsstring>(const Vector3f &amp;delta)</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>translate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="308" column="29" declfile="src/core/transform.h" declline="308" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a7acbd19453bccf5b94cfa1133df02981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::scale</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>scale </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="314" column="29" declfile="src/core/transform.h" declline="314" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a9a343fe7cec03ad3c562a926fc052f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateX</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateX</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through x axis </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="320" column="29" declfile="src/core/transform.h" declline="320" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a6ddc73eb8238f15d8c1016069962e8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateY</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateY</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through y axis </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DAKKU_EXPORT_CORE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="328" column="29" declfile="src/core/transform.h" declline="328" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2bbb040f4ba3ff426a543ad8129195de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotateZ</definition>
        <argsstring>(float theta)</argsstring>
        <name>rotateZ</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>rotate through z axis </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DAKKU_EXPORT_CORE </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="336" column="29" declfile="src/core/transform.h" declline="336" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a5158202b82b35e77f9fc61285161488a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::rotate</definition>
        <argsstring>(float theta, const Vector3f &amp;axis)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>rotate through <computeroutput>axis</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>given axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="344" column="29" declfile="src/core/transform.h" declline="344" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1aaa536865ee7be0b7a4ed6109f261eeb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::lookAt</definition>
        <argsstring>(const Point3f &amp;pos, const Point3f &amp;look, const Vector3f &amp;refUp)</argsstring>
        <name>lookAt</name>
        <param>
          <type>const <ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1a8323b90fda75af310a40a4e0d6bdb3f0" kindref="member">Point3f</ref> &amp;</type>
          <declname>look</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>refUp</declname>
        </param>
        <briefdescription>
<para>look at </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>camera position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>look</parametername>
</parameternamelist>
<parameterdescription>
<para>camera look direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refUp</parametername>
</parameternamelist>
<parameterdescription>
<para>reference up vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="353" column="29" declfile="src/core/transform.h" declline="353" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1afd935f8b4f1ca9b28257d07b7f276739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref> <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>DAKKU_EXPORT_CORE Transform dakku::perspective</definition>
        <argsstring>(float fov, float zNear, float zFar)</argsstring>
        <name>perspective</name>
        <param>
          <type>float</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
<para>perspective transform </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>field of view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zNear</parametername>
</parameternamelist>
<parameterdescription>
<para>far plane z </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zFar</parametername>
</parameternamelist>
<parameterdescription>
<para>near plane z</para>
</parameterdescription>
</parameteritem>
</parameterlist>
the shorter edge mapped to [-1, 1], the longer [-ratio, ratio] left handed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="366" column="29" declfile="src/core/transform.h" declline="366" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2016f3c3a16c069a055a7017eacb0e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename D1</type>
          </param>
          <param>
            <type>typename D2</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::dot</definition>
        <argsstring>(const VectorBase&lt; T, S, D1 &gt; &amp;a, const VectorBase&lt; T, S, D2 &gt; &amp;b)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D2 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>dot product between two vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec a$ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>$\vec a \cdot \vec b$ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="797" column="17" bodyfile="src/core/vector_base.h" bodystart="797" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a8416c1b8bf26cb7dedb7fe0c886662dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename D1</type>
          </param>
          <param>
            <type>typename D2</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::absDot</definition>
        <argsstring>(const VectorBase&lt; T, S, D1 &gt; &amp;a, const VectorBase&lt; T, S, D2 &gt; &amp;b)</argsstring>
        <name>absDot</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; T, S, D2 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>absolute value of dot product between two vectors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec a$ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>$|\vec a \cdot \vec b|$ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="810" column="17" bodyfile="src/core/vector_base.h" bodystart="810" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ab1fd7a566663942d0a6ddc982890d74b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_EXPORT_OBJECTS</definition>
        <argsstring>(Filters, BoxFilter, TriangleFilter)</argsstring>
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param>
          <type>Filters</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1BoxFilter" kindref="compound">BoxFilter</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1TriangleFilter" kindref="compound">TriangleFilter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/filters/api.h" line="8" column="1" declfile="src/filters/api.h" declline="8" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af6341cd9dee71fb7731ce988277fea7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::gammaCorrect</definition>
        <argsstring>(float value)</argsstring>
        <name>gammaCorrect</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>gamma correction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/imageio/fwd.h" line="17" column="14" bodyfile="src/imageio/fwd.h" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1aeb8251264c62aa09029e8f63d598e2b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float dakku::inverseGammaCorrect</definition>
        <argsstring>(float value)</argsstring>
        <name>inverseGammaCorrect</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>inverse gamma correction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/imageio/fwd.h" line="26" column="14" bodyfile="src/imageio/fwd.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1abc410b389b946378187c69b6cbeba1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imageio_2fwd_8h_1ab0769d84ea09188408c5c02f1e8d42aa" kindref="member">DAKKU_EXPORT_IMAGEIO</ref> bool</type>
        <definition>DAKKU_EXPORT_IMAGEIO bool dakku::writeImage</definition>
        <argsstring>(const std::filesystem::path &amp;path, const float *rgb, int totalResX, int totalResY, int outBoundsMinX=0, int outBoundsMinY=0, int outBoundsMaxX=-1, int outBoundsMaxY=-1)</argsstring>
        <name>writeImage</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>totalResX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>totalResY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outBoundsMinX</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>outBoundsMinY</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>outBoundsMaxX</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>outBoundsMaxY</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>write image to path </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>file path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>totalResX</parametername>
</parameternamelist>
<parameterdescription>
<para>total resolution x (width) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>totalResY</parametername>
</parameternamelist>
<parameterdescription>
<para>total resolution y (height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outBoundsMinX</parametername>
</parameternamelist>
<parameterdescription>
<para>crop window bounds (pMin.x) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outBoundsMinY</parametername>
</parameternamelist>
<parameterdescription>
<para>crop window bounds (pMin.y) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outBoundsMaxX</parametername>
</parameternamelist>
<parameterdescription>
<para>crop window bounds (pMax.x) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outBoundsMaxY</parametername>
</parameternamelist>
<parameterdescription>
<para>crop window bounds (pMax.y) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/imageio/imageio.h" line="20" column="27" declfile="src/imageio/imageio.h" declline="20" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2dd1a538eac12b436aad8012e5af1268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imageio_2fwd_8h_1ab0769d84ea09188408c5c02f1e8d42aa" kindref="member">DAKKU_EXPORT_IMAGEIO</ref> float *</type>
        <definition>DAKKU_EXPORT_IMAGEIO float * dakku::readImage</definition>
        <argsstring>(const std::filesystem::path &amp;path, int &amp;resX, int &amp;resY, bool flipVertical=true, int gamma=-1, float scale=1)</argsstring>
        <name>readImage</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>resX</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>resY</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flipVertical</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>gamma</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>read image from file <bold>need to free memory manually</bold> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>image file path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rgb</parametername>
</parameternamelist>
<parameterdescription>
<para>image buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">resX</parametername>
</parameternamelist>
<parameterdescription>
<para>image resolution x (width) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">resY</parametername>
</parameternamelist>
<parameterdescription>
<para>image resolution y (height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flipVertical</parametername>
</parameternamelist>
<parameterdescription>
<para>flip y </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>do inverse gamma correction: -1 auto, 0 not, 1 do </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale the image value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/imageio/imageio.h" line="39" column="28" declfile="src/imageio/imageio.h" declline="39" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a56ee8590ffd24bd3f70b555372fa4697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_EXPORT_OBJECTS</definition>
        <argsstring>(Stream, FileOutputStream, FileInputStream)</argsstring>
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param>
          <type>Stream</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1FileOutputStream" kindref="compound">FileOutputStream</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1FileInputStream" kindref="compound">FileInputStream</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/stream/api.h" line="13" column="1" declfile="src/stream/api.h" declline="13" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a84c83f6f4de090b0ef57c9298b8d91d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_EXPORT_OBJECTS</definition>
        <argsstring>(Textures, ConstantTexture, ImageTexture)</argsstring>
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param>
          <type>Textures</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1ConstantTexture" kindref="compound">ConstantTexture</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1ImageTexture" kindref="compound">ImageTexture</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/textures/api.h" line="14" column="1" declfile="src/textures/api.h" declline="14" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dakku namespace </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/cameras/api.h" line="5" column="1"/>
  </compounddef>
</doxygen>
