<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacedakku" kind="namespace" language="C++">
    <compoundname>dakku</compoundname>
    <innerclass refid="classdakku_1_1Bounds2" prot="public">dakku::Bounds2</innerclass>
    <innerclass refid="classdakku_1_1Bounds2iIterator" prot="public">dakku::Bounds2iIterator</innerclass>
    <innerclass refid="classdakku_1_1Bounds3" prot="public">dakku::Bounds3</innerclass>
    <innerclass refid="classdakku_1_1BoundsBase" prot="public">dakku::BoundsBase</innerclass>
    <innerclass refid="classdakku_1_1BoxFilter" prot="public">dakku::BoxFilter</innerclass>
    <innerclass refid="classdakku_1_1Filter" prot="public">dakku::Filter</innerclass>
    <innerclass refid="classdakku_1_1GlobalMemoryArena" prot="public">dakku::GlobalMemoryArena</innerclass>
    <innerclass refid="classdakku_1_1Logger" prot="public">dakku::Logger</innerclass>
    <innerclass refid="classdakku_1_1Lua" prot="public">dakku::Lua</innerclass>
    <innerclass refid="classdakku_1_1MemoryArena" prot="public">dakku::MemoryArena</innerclass>
    <innerclass refid="classdakku_1_1Normal" prot="public">dakku::Normal</innerclass>
    <innerclass refid="classdakku_1_1Point" prot="public">dakku::Point</innerclass>
    <innerclass refid="classdakku_1_1Ray" prot="public">dakku::Ray</innerclass>
    <innerclass refid="classdakku_1_1RayDifferential" prot="public">dakku::RayDifferential</innerclass>
    <innerclass refid="classdakku_1_1TriangleFilter" prot="public">dakku::TriangleFilter</innerclass>
    <innerclass refid="classdakku_1_1Vector" prot="public">dakku::Vector</innerclass>
    <innerclass refid="classdakku_1_1VectorBase" prot="public">dakku::VectorBase</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacedakku_1abcc743bdeb62068a56f14ac3ef9963b7" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds2f = typedef Bounds2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2f</name>
        <briefdescription>
<para>2d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="292" column="1" bodyfile="src/core/bounds.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds2" kindref="compound">Bounds2</ref>&lt; int &gt;</type>
        <definition>using dakku::Bounds2i = typedef Bounds2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds2i</name>
        <briefdescription>
<para>2d int bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="294" column="1" bodyfile="src/core/bounds.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a19129587abbff965c2c15bab5723e208" prot="public" static="no">
        <type><ref refid="classdakku_1_1Bounds3" kindref="compound">Bounds3</ref>&lt; float &gt;</type>
        <definition>using dakku::Bounds3f = typedef Bounds3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Bounds3f</name>
        <briefdescription>
<para>3d float bounds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="309" column="1" bodyfile="src/core/bounds.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a2431c33b3d39e5cf0d0f8e952ea2b834" prot="public" static="no">
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; int, 2 &gt;</type>
        <definition>using dakku::Vector2i = typedef Vector&lt;int, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2i</name>
        <briefdescription>
<para>2d int vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="53" column="1" bodyfile="src/core/vector.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a99b4c761ebbe92955e167b5e27cb5992" prot="public" static="no">
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; float, 2 &gt;</type>
        <definition>using dakku::Vector2f = typedef Vector&lt;float, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Vector2f</name>
        <briefdescription>
<para>2d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="55" column="1" bodyfile="src/core/vector.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ad924c9ec2e2e6a86ebb00f41aedc3e77" prot="public" static="no">
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; int, 3 &gt;</type>
        <definition>using dakku::Vector3i = typedef Vector&lt;int, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3i</name>
        <briefdescription>
<para>3d int vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="57" column="1" bodyfile="src/core/vector.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a890ec4679d6f6f83722a0b5a41d0eebb" prot="public" static="no">
        <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref>&lt; float, 3 &gt;</type>
        <definition>using dakku::Vector3f = typedef Vector&lt;float, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Vector3f</name>
        <briefdescription>
<para>3d float vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="59" column="1" bodyfile="src/core/vector.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a1fb7babbecae697c3b67e44b28425c43" prot="public" static="no">
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; float, 3 &gt;</type>
        <definition>using dakku::Point3f = typedef Point&lt;float, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Point3f</name>
        <briefdescription>
<para>3d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="129" column="1" bodyfile="src/core/vector.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a8f5683cd8dc29bf2c90940f0dadcc5aa" prot="public" static="no">
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; int, 3 &gt;</type>
        <definition>using dakku::Point3i = typedef Point&lt;int, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Point3i</name>
        <briefdescription>
<para>3d int point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="131" column="1" bodyfile="src/core/vector.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1aa5c5407fb67da06d222ad3881949e9b6" prot="public" static="no">
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; float, 2 &gt;</type>
        <definition>using dakku::Point2f = typedef Point&lt;float, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Point2f</name>
        <briefdescription>
<para>2d float point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="133" column="1" bodyfile="src/core/vector.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1a8a5f9e6a937f1534e71801592fcab641" prot="public" static="no">
        <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref>&lt; int, 2 &gt;</type>
        <definition>using dakku::Point2i = typedef Point&lt;int, 2&gt;</definition>
        <argsstring></argsstring>
        <name>Point2i</name>
        <briefdescription>
<para>2d int point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="135" column="1" bodyfile="src/core/vector.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacedakku_1ae27019e27a867bc17249704ed8dcb5d8" prot="public" static="no">
        <type><ref refid="classdakku_1_1Normal" kindref="compound">Normal</ref>&lt; float, 3 &gt;</type>
        <definition>using dakku::Normal3f = typedef Normal&lt;float, 3&gt;</definition>
        <argsstring></argsstring>
        <name>Normal3f</name>
        <briefdescription>
<para>3d float normal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="186" column="1" bodyfile="src/core/vector.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacedakku_1a53c476552ecb27caba955675d8efb680" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::INF</definition>
        <argsstring></argsstring>
        <name>INF</name>
        <initializer>= std::numeric_limits&lt;float&gt;::infinity()</initializer>
        <briefdescription>
<para>infinity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="11" column="24" bodyfile="src/core/constants.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1af7aa9dc8532b3506d50b84f932560eb0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::PI</definition>
        <argsstring></argsstring>
        <name>PI</name>
        <initializer>= std::numbers::pi_v&lt;float&gt;</initializer>
        <briefdescription>
<para>PI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="14" column="24" bodyfile="src/core/constants.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a4e370f12ecabfcf4c169ca0eb199f19a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::INV_PI</definition>
        <argsstring></argsstring>
        <name>INV_PI</name>
        <initializer>=
    static_cast&lt;float&gt;(1.0 / std::numbers::pi_v&lt;double&gt;)</initializer>
        <briefdescription>
<para>$\frac 1 \pi$ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="17" column="24" bodyfile="src/core/constants.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1adae866489e43019f6aa30b0f577f8311" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::PI_OVER_2</definition>
        <argsstring></argsstring>
        <name>PI_OVER_2</name>
        <initializer>=
    static_cast&lt;float&gt;(std::numbers::pi_v&lt;double&gt; / 2.0)</initializer>
        <briefdescription>
<para>$\frac \pi 2$ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="21" column="24" bodyfile="src/core/constants.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a2922918eae4cac3a44006897e878daf7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::PI_OVER_4</definition>
        <argsstring></argsstring>
        <name>PI_OVER_4</name>
        <initializer>=
    static_cast&lt;float&gt;(std::numbers::pi_v&lt;double&gt; / 4.0)</initializer>
        <briefdescription>
<para>$\frac \pi 4$ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="25" column="24" bodyfile="src/core/constants.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a8ecbddd8386198d0dd187cd20b53e42d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::SHADOW_EPS</definition>
        <argsstring></argsstring>
        <name>SHADOW_EPS</name>
        <initializer>= 1e-5f</initializer>
        <briefdescription>
<para>shadow epsilon, used for shadow ray, offset ray origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="29" column="24" bodyfile="src/core/constants.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacedakku_1a204f33930db458865d7f796fd768055d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float dakku::ONE_MINUS_EPSILON</definition>
        <argsstring></argsstring>
        <name>ONE_MINUS_EPSILON</name>
        <initializer>=
    1 - std::numeric_limits&lt;float&gt;::epsilon()</initializer>
        <briefdescription>
<para>1 - eps </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/constants.h" line="32" column="24" bodyfile="src/core/constants.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedakku_1af0a2453f8db3eb948901c7a0aed18434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::begin</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>begin</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>begin of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="358" column="25" bodyfile="src/core/bounds.h" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a41ae9fcb2290e6ea6f7d4b0fbca86d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::end</definition>
        <argsstring>(const Bounds2i &amp;b)</argsstring>
        <name>end</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>end of the bounds2i iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="366" column="25" bodyfile="src/core/bounds.h" bodystart="366" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a79bc914e02b7226466716239448fbe68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Bounds, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type>Bounds</type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="377" column="1" declfile="src/core/bounds.h" declline="377" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a08f737017abfd03bfaeb4b0c0d1d8928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isnan</definition>
        <argsstring>(T x)</argsstring>
        <name>isnan</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
    <requiresclause>std::is_floating_point_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (floating point) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether <computeroutput>x</computeroutput> is nan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/math_func.h" line="17" column="21" bodyfile="src/core/math_func.h" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a63937ef3cf02827d924baad7b2e783ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isnan</definition>
        <argsstring>(T)</argsstring>
        <name>isnan</name>
        <param>
          <type>T</type>
        </param>
    <requiresclause>std::is_integral_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false (all integers are not nans) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/math_func.h" line="28" column="21" bodyfile="src/core/math_func.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a900ed7dca6a21cb95298e35672c2b9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Vector2i, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a2431c33b3d39e5cf0d0f8e952ea2b834" kindref="member">Vector2i</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="61" column="1" declfile="src/core/vector.h" declline="61" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a7a86c290217042e6a4d4d27cc8bd536f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Vector2f, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a99b4c761ebbe92955e167b5e27cb5992" kindref="member">Vector2f</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="62" column="1" declfile="src/core/vector.h" declline="62" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a85e3ffeca46c3d1f69f035b034ecabca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Vector3i, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1ad924c9ec2e2e6a86ebb00f41aedc3e77" kindref="member">Vector3i</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="63" column="1" declfile="src/core/vector.h" declline="63" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a40090f4d7f9156a610dff4a42487b3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Vector3f, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a890ec4679d6f6f83722a0b5a41d0eebb" kindref="member">Vector3f</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="64" column="1" declfile="src/core/vector.h" declline="64" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a5a50c43d745f1df08aa87f9667801708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Point3f, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a1fb7babbecae697c3b67e44b28425c43" kindref="member">Point3f</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="136" column="1" declfile="src/core/vector.h" declline="136" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a8ade4f916825f1624881833323159391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Point3i, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a8f5683cd8dc29bf2c90940f0dadcc5aa" kindref="member">Point3i</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="137" column="1" declfile="src/core/vector.h" declline="137" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1aeeaf3a4bc599ed441b0b5d440649d8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Point2f, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1aa5c5407fb67da06d222ad3881949e9b6" kindref="member">Point2f</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="138" column="1" declfile="src/core/vector.h" declline="138" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1aad468b217fadca156b426897b4fddb7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Point2i, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1a8a5f9e6a937f1534e71801592fcab641" kindref="member">Point2i</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="139" column="1" declfile="src/core/vector.h" declline="139" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ab0a1c15a5d93b5e9775b90bd199f91e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(Normal3f, DAKKU_EXPORT_CORE)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="namespacedakku_1ae27019e27a867bc17249704ed8dcb5d8" kindref="member">Normal3f</ref></type>
        </param>
        <param>
          <type><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="187" column="1" declfile="src/core/vector.h" declline="187" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ac4d431d350901dc2f24fea60dabb4245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="filters_2fwd_8h_1a43808664e862ce668a722f7b1077b1e5" kindref="member">DAKKU_EXPORT_FILTERS</ref> <ref refid="classdakku_1_1Filter" kindref="compound">Filter</ref> *</type>
        <definition>DAKKU_EXPORT_FILTERS Filter * dakku::create_box_filter</definition>
        <argsstring>(float x_width, float y_width)</argsstring>
        <name>create_box_filter</name>
        <param>
          <type>float</type>
          <declname>x_width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_width</declname>
        </param>
        <briefdescription>
<para>Create a box filter object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/filters/box.h" line="22" column="29" declfile="src/filters/box.h" declline="22" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a6883b120d067a58dc252b98914fb45cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(BoxFilter, DAKKU_EXPORT_FILTERS)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="classdakku_1_1BoxFilter" kindref="compound">BoxFilter</ref></type>
        </param>
        <param>
          <type><ref refid="filters_2fwd_8h_1a43808664e862ce668a722f7b1077b1e5" kindref="member">DAKKU_EXPORT_FILTERS</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/filters/box.h" line="24" column="1" declfile="src/filters/box.h" declline="24" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a2a7f66fe482ec2408d7d779d7a6d5b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="filters_2fwd_8h_1a43808664e862ce668a722f7b1077b1e5" kindref="member">DAKKU_EXPORT_FILTERS</ref> <ref refid="classdakku_1_1Filter" kindref="compound">Filter</ref> *</type>
        <definition>DAKKU_EXPORT_FILTERS Filter * dakku::create_triangle_filter</definition>
        <argsstring>(float x_width, float y_width)</argsstring>
        <name>create_triangle_filter</name>
        <param>
          <type>float</type>
          <declname>x_width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_width</declname>
        </param>
        <briefdescription>
<para>Create a triangle filter object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/filters/triangle.h" line="22" column="29" declfile="src/filters/triangle.h" declline="22" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1af1d89de68cd9c6bd9e7b0c5e9bcdf615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_LUA_OBJECT</definition>
        <argsstring>(TriangleFilter, DAKKU_EXPORT_FILTERS)</argsstring>
        <name>DAKKU_DECLARE_LUA_OBJECT</name>
        <param>
          <type><ref refid="classdakku_1_1TriangleFilter" kindref="compound">TriangleFilter</ref></type>
        </param>
        <param>
          <type><ref refid="filters_2fwd_8h_1a43808664e862ce668a722f7b1077b1e5" kindref="member">DAKKU_EXPORT_FILTERS</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/filters/triangle.h" line="24" column="1" declfile="src/filters/triangle.h" declline="24" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dakku namespace </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/bounds.h" line="8" column="1"/>
  </compounddef>
</doxygen>
