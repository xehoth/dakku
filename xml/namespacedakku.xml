<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacedakku" kind="namespace" language="C++">
    <compoundname>dakku</compoundname>
    <innerclass refid="classdakku_1_1Logger" prot="public">dakku::Logger</innerclass>
    <innerclass refid="classdakku_1_1Lua" prot="public">dakku::Lua</innerclass>
    <innerclass refid="classdakku_1_1Normal" prot="public">dakku::Normal</innerclass>
    <innerclass refid="classdakku_1_1Point" prot="public">dakku::Point</innerclass>
    <innerclass refid="classdakku_1_1Vector" prot="public">dakku::Vector</innerclass>
    <innerclass refid="classdakku_1_1VectorBase" prot="public">dakku::VectorBase</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacedakku_1a08f737017abfd03bfaeb4b0c0d1d8928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isnan</definition>
        <argsstring>(T x)</argsstring>
        <name>isnan</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
    <requiresclause>std::is_floating_point_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (floating point) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether <computeroutput>x</computeroutput> is nan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/math_func.h" line="17" column="21" bodyfile="src/core/math_func.h" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a63937ef3cf02827d924baad7b2e783ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="platform_8h_1a7bc0107b6d161e4a712eee011c57792c" kindref="member">DAKKU_INLINE</ref> bool</type>
        <definition>DAKKU_INLINE bool dakku::isnan</definition>
        <argsstring>(T)</argsstring>
        <name>isnan</name>
        <param>
          <type>T</type>
        </param>
    <requiresclause>std::is_integral_v&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>check whether <computeroutput>x</computeroutput> is not a number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type (integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false (all integers are not nans) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/math_func.h" line="28" column="21" bodyfile="src/core/math_func.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ae303c565a0d5e6176b10af7aca2e7e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_VECTOR_TYPE</definition>
        <argsstring>(Vector2i, Vector, int, 2)</argsstring>
        <name>DAKKU_DECLARE_VECTOR_TYPE</name>
        <param>
          <type>Vector2i</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="62" column="1" declfile="src/core/vector.h" declline="62" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a3d234abea587b4d5f1a9ed2a572a18d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_VECTOR_TYPE</definition>
        <argsstring>(Vector2f, Vector, float, 2)</argsstring>
        <name>DAKKU_DECLARE_VECTOR_TYPE</name>
        <param>
          <type>Vector2f</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="63" column="1" declfile="src/core/vector.h" declline="63" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a9b62fff909c0a2340f5a280a9d6223b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_VECTOR_TYPE</definition>
        <argsstring>(Vector3i, Vector, int, 3)</argsstring>
        <name>DAKKU_DECLARE_VECTOR_TYPE</name>
        <param>
          <type>Vector3i</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="64" column="1" declfile="src/core/vector.h" declline="64" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a468ec76a23de6c67d1a82265d1ac4a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_VECTOR_TYPE</definition>
        <argsstring>(Vector3f, Vector, float, 3)</argsstring>
        <name>DAKKU_DECLARE_VECTOR_TYPE</name>
        <param>
          <type>Vector3f</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="65" column="1" declfile="src/core/vector.h" declline="65" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1ab924c4a5b6256128014af8e4656f73f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_POINT_TYPE</definition>
        <argsstring>(Point3f, Point, float, 3, Vector3f)</argsstring>
        <name>DAKKU_DECLARE_POINT_TYPE</name>
        <param>
          <type>Point3f</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>Vector3f</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="110" column="1" declfile="src/core/vector.h" declline="110" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a09b52d0a7df2166ec5f4f543adf504eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_POINT_TYPE</definition>
        <argsstring>(Point3i, Point, int, 3, Vector3i)</argsstring>
        <name>DAKKU_DECLARE_POINT_TYPE</name>
        <param>
          <type>Point3i</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>Vector3i</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="111" column="1" declfile="src/core/vector.h" declline="111" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1a5119cab995df96b5bd09a4939f6033a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_POINT_TYPE</definition>
        <argsstring>(Point2f, Point, float, 2, Vector2f)</argsstring>
        <name>DAKKU_DECLARE_POINT_TYPE</name>
        <param>
          <type>Point2f</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>Vector2f</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="112" column="1" declfile="src/core/vector.h" declline="112" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1acabc131b8ead3ecb512e5eda962116e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_POINT_TYPE</definition>
        <argsstring>(Point2i, Point, int, 2, Vector2i)</argsstring>
        <name>DAKKU_DECLARE_POINT_TYPE</name>
        <param>
          <type>Point2i</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Point" kindref="compound">Point</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>Vector2i</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="113" column="1" declfile="src/core/vector.h" declline="113" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacedakku_1abca7bbca41d0c48fad018ab314a0addd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::DAKKU_DECLARE_VECTOR_TYPE</definition>
        <argsstring>(Normal3f, Normal, float, 3)</argsstring>
        <name>DAKKU_DECLARE_VECTOR_TYPE</name>
        <param>
          <type>Normal3f</type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Normal" kindref="compound">Normal</ref></type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector.h" line="160" column="1" declfile="src/core/vector.h" declline="160" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dakku namespace </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/constants.h" line="5" column="1"/>
  </compounddef>
</doxygen>
