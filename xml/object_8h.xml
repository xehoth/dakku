<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="object_8h" kind="file" language="C++">
    <compoundname>object.h</compoundname>
    <includes refid="class_8h" local="no">core/class.h</includes>
    <includedby refid="core_2api_8h" local="no">src/core/api.h</includedby>
    <includedby refid="filter_8h" local="no">src/core/filter.h</includedby>
    <includedby refid="serialization_8h" local="no">src/core/serialization.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>core/class.h</label>
        <link refid="class_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/fwd.h</label>
        <link refid="core_2fwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>core/property.h</label>
        <link refid="property_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>core/ray.h</label>
        <link refid="ray_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core/transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>core/vector_base.h</label>
        <link refid="vector__base_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="25">
        <label>map</label>
      </node>
      <node id="24">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="7">
        <label>numbers</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="11">
        <label>spdlog/fmt/ostr.h</label>
      </node>
      <node id="10">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="27">
        <label>string_view</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="23">
        <label>utility</label>
      </node>
      <node id="26">
        <label>variant</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/core/api.h</label>
        <link refid="core_2api_8h"/>
      </node>
      <node id="8">
        <label>src/core/film.h</label>
        <link refid="film_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/core/filter.h</label>
        <link refid="filter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/core/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/core/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/filters/api.h</label>
        <link refid="filters_2api_8h"/>
      </node>
      <node id="4">
        <label>src/filters/box.h</label>
        <link refid="box_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/filters/fwd.h</label>
        <link refid="filters_2fwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/filters/triangle.h</label>
        <link refid="triangle_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/stream/api.h</label>
        <link refid="stream_2api_8h"/>
      </node>
      <node id="11">
        <label>src/stream/fstream.h</label>
        <link refid="fstream_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/stream/fwd.h</label>
        <link refid="stream_2fwd_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdakku_1_1Object" prot="public">dakku::Object</innerclass>
    <innernamespace refid="namespacedakku">dakku</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="object_8h_1adebe9d6b28624419b368ed9d52f52f2f" prot="public" static="no">
        <name>DAKKU_DECLARE_OBJECT</name>
        <param><defname>name</defname></param>
        <param><defname>parent</defname></param>
        <initializer>  static std::string getClassNameStatic() { return #name; }    \
  [[nodiscard]] std::string getClassName() const override {    \
    return getClassNameStatic();                               \
  }                                                            \
  static std::string getParentNameStatic() { return #parent; } \
  [[nodiscard]] std::string getParentName() const override {   \
    return getParentNameStatic();                              \
  }                                                            \
  explicit name(const Property &amp; = {})</initializer>
        <briefdescription>
<para>declare a dakku object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/object.h" line="57" column="9" bodyfile="src/core/object.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1a76ec8c7fb191261eda93e2d1b5a3e9be" prot="public" static="no">
        <name>DAKKU_EXPORT_OBJECTS</name>
        <param><defname>module</defname></param>
        <param><defname>...</defname></param>
        <initializer>  volatile int _export##module##ModuleObjects = [] { \
    registerObjects&lt;__VA_ARGS__&gt;();                  \
    return 0;                                        \
  }()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/object.h" line="73" column="9" bodyfile="src/core/object.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DAKKU_CORE_OBJECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_CORE_OBJECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class_8h" kindref="compound">core/class.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedakku" kindref="compound">dakku</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classdakku_1_1Object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="core_2fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref><sp/><ref refid="classdakku_1_1Object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classdakku_1_1Object_1a0c792f089351caf3fa7a704c86ce903d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Object_1a0c792f089351caf3fa7a704c86ce903d" kindref="member">~Object</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classdakku_1_1Object_1a20e78d46fa11d575d63e048279150eac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Object_1a20e78d46fa11d575d63e048279150eac" kindref="member">Object</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Property" kindref="compound">Property</ref><sp/>&amp;<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classdakku_1_1Object_1a543f734268f7be81badecee6cf7245cc" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classdakku_1_1Object_1a543f734268f7be81badecee6cf7245cc" kindref="member">getClassName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classdakku_1_1Object_1accec0632e79097564677055bef4220bd" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classdakku_1_1Object_1accec0632e79097564677055bef4220bd" kindref="member">getParentName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classdakku_1_1Object_1a65d91c04e480b827fa495df96af2826b" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classdakku_1_1Object_1a65d91c04e480b827fa495df96af2826b" kindref="member">toString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classdakku_1_1Object_1add47b28fc1878f008bb6664a83faad72" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Object_1add47b28fc1878f008bb6664a83faad72" kindref="member">isDerivedFrom</ref>(std::string_view<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classdakku_1_1Object_1a055e32b0624d9a96fc2014fe5d9d0c81" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdakku_1_1Object_1a055e32b0624d9a96fc2014fe5d9d0c81" kindref="member">isBaseOf</ref>(std::string_view<sp/>name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classdakku_1_1Object_1a247ed68865f464d511b7fdb85467c354" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classdakku_1_1Object_1a247ed68865f464d511b7fdb85467c354" kindref="member">getClassNameStatic</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="51" refid="classdakku_1_1Object_1a08ec83c660afb1850455ef30c43fa29c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classdakku_1_1Object_1a08ec83c660afb1850455ef30c43fa29c" kindref="member">getParentNameStatic</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="object_8h_1adebe9d6b28624419b368ed9d52f52f2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_DECLARE_OBJECT(name,<sp/>parent)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>static<sp/>std::string<sp/>getClassNameStatic()<sp/>{<sp/>return<sp/>#name;<sp/>}<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/>getClassName()<sp/>const<sp/>override<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>getClassNameStatic();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/>static<sp/>std::string<sp/>getParentNameStatic()<sp/>{<sp/>return<sp/>#parent;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/>getParentName()<sp/>const<sp/>override<sp/>{<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>getParentNameStatic();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>explicit<sp/>name(const<sp/>Property<sp/>&amp;<sp/>=<sp/>{})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="69" refid="namespacedakku_1ac5c65853b3b4155436da5b4402bebcad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedakku_1ac5c65853b3b4155436da5b4402bebcad" kindref="member">registerObjects</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>(<ref refid="classdakku_1_1Class_1a38f609682794eb8644448c458c9679cb" kindref="member">Class::instance</ref>().<ref refid="classdakku_1_1Class_1abfdf06dcdc49b01551130b41358cb93d" kindref="member">registerClass</ref>&lt;Args&gt;(),<sp/>...);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="object_8h_1a76ec8c7fb191261eda93e2d1b5a3e9be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAKKU_EXPORT_OBJECTS(module,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>volatile<sp/>int<sp/>_export##module##ModuleObjects<sp/>=<sp/>[]<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>registerObjects&lt;__VA_ARGS__&gt;();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/>}()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dakku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/object.h"/>
  </compounddef>
</doxygen>
