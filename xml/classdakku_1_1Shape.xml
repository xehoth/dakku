<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1Shape" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>dakku::Shape</compoundname>
    <basecompoundref refid="classdakku_1_1Object" prot="public" virt="non-virtual">dakku::Object</basecompoundref>
    <includes refid="shape_8h" local="no">shape.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdakku_1_1Shape_1af14c5ad6380191698502a5b6ebfe30fe" prot="public" static="no" mutable="no">
        <type>const <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref> *</type>
        <definition>const Transform* dakku::Shape::objectToWorld</definition>
        <argsstring></argsstring>
        <name>objectToWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="106" column="19" bodyfile="src/core/shape.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Shape_1ac1c407215b941bade1fb229e74c58d2f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref> *</type>
        <definition>const Transform * dakku::Shape::worldToObject</definition>
        <argsstring></argsstring>
        <name>worldToObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="106" column="33" bodyfile="src/core/shape.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Shape_1aad943a4507cb9b01f0103981c847e19b" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool dakku::Shape::transformSwapsHandedness</definition>
        <argsstring></argsstring>
        <name>transformSwapsHandedness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="107" column="14" bodyfile="src/core/shape.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1Shape_1aac110048040df95b607cc505ad2eb218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Shape::DAKKU_DECLARE_OBJECT</definition>
        <argsstring>(Shape, Object)</argsstring>
        <name>DAKKU_DECLARE_OBJECT</name>
        <param>
          <type><ref refid="classdakku_1_1Shape" kindref="compound">Shape</ref></type>
        </param>
        <param>
          <type><ref refid="classdakku_1_1Object" kindref="compound">Object</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="11" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1acb5e66e646d6fd0709ef4b8d6179142f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Shape::Shape</definition>
        <argsstring>(const Transform *objectToWorld, const Transform *worldToObject)</argsstring>
        <name>Shape</name>
        <param>
          <type>const <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref> *</type>
          <declname>objectToWorld</declname>
        </param>
        <param>
          <type>const <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref> *</type>
          <declname>worldToObject</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Shape" kindref="compound">Shape</ref> object with given transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="17" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1aa36bbef60c9caa01503d5fd50f47388a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dakku::Shape::Shape</definition>
        <argsstring>(const Transform *objectToWorld)</argsstring>
        <name>Shape</name>
        <param>
          <type>const <ref refid="classdakku_1_1Transform" kindref="compound">Transform</ref> *</type>
          <declname>objectToWorld</declname>
        </param>
        <briefdescription>
<para>given objectToWorld, calculate inverse for worldToObject </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="24" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1a5a9fd700c1e56cf18784384ba0eeb5e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacedakku_1a19129587abbff965c2c15bab5723e208" kindref="member">Bounds3f</ref></type>
        <definition>virtual Bounds3f dakku::Shape::objectBound</definition>
        <argsstring>() const =0</argsstring>
        <name>objectBound</name>
        <briefdescription>
<para>get object bounding box </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="30" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1ad7d19f6b59f7cb7e333a43d3f0eaacf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacedakku_1a19129587abbff965c2c15bab5723e208" kindref="member">Bounds3f</ref></type>
        <definition>virtual Bounds3f dakku::Shape::worldBound</definition>
        <argsstring>() const</argsstring>
        <name>worldBound</name>
        <briefdescription>
<para>get world bounding box </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="36" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1a8994ddc5864708868642720c2561a179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool dakku::Shape::intersect</definition>
        <argsstring>(const Ray &amp;ray, float *tHit, SurfaceInteraction *isect, bool testAlphaTexture=true) const =0</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>tHit</declname>
        </param>
        <param>
          <type><ref refid="classdakku_1_1SurfaceInteraction" kindref="compound">SurfaceInteraction</ref> *</type>
          <declname>isect</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>testAlphaTexture</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>shape-ray intersection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ray</parametername>
</parameternamelist>
<parameterdescription>
<para>given ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">tHit</parametername>
</parameternamelist>
<parameterdescription>
<para>hit ray time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">isect</parametername>
</parameternamelist>
<parameterdescription>
<para>intersect info </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="45" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1aabda589a8380ec7b9f48c03693de58df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool dakku::Shape::hasIntersection</definition>
        <argsstring>(const Ray &amp;ray, bool testAlphaTexture=true) const</argsstring>
        <name>hasIntersection</name>
        <param>
          <type>const <ref refid="classdakku_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>testAlphaTexture</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>check whether ray and shape has intersection </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="52" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1adfc5caa3d24760f7f76db43b343be1d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float dakku::Shape::area</definition>
        <argsstring>() const =0</argsstring>
        <name>area</name>
        <briefdescription>
<para>get shape area </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1a2ab207143d959280b029b464d7ba18e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structdakku_1_1Interaction" kindref="compound">Interaction</ref></type>
        <definition>virtual Interaction dakku::Shape::samplePosition</definition>
        <argsstring>(const Point2f &amp;u, float &amp;pdf) const =0</argsstring>
        <name>samplePosition</name>
        <param>
          <type>const <ref refid="namespacedakku_1a9910f23501fd2ef5e9a829cdab0992be" kindref="member">Point2f</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>pdf</declname>
        </param>
        <briefdescription>
<para>sample a point on the shape and return the pdf with respect to the area of the surface </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>random sample </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdf</parametername>
</parameternamelist>
<parameterdescription>
<para>pdf </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sampled point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="69" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1a350c4ead757cc7b6caefc91829ed0eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>virtual float dakku::Shape::pdfPosition</definition>
        <argsstring>(const Interaction &amp;) const</argsstring>
        <name>pdfPosition</name>
        <param>
          <type>const <ref refid="structdakku_1_1Interaction" kindref="compound">Interaction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>the pdf of sampling a point on the shape with respect to the area of the surface </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="76" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1a78022e0a960761b2ef450dc049cd9dc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structdakku_1_1Interaction" kindref="compound">Interaction</ref></type>
        <definition>virtual Interaction dakku::Shape::sampleDirection</definition>
        <argsstring>(const Interaction &amp;ref, const Point2f &amp;u, float &amp;pdf) const</argsstring>
        <name>sampleDirection</name>
        <param>
          <type>const <ref refid="structdakku_1_1Interaction" kindref="compound">Interaction</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1a9910f23501fd2ef5e9a829cdab0992be" kindref="member">Point2f</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>pdf</declname>
        </param>
        <briefdescription>
<para>sample a point on the shape and return the pdf with respect to solid angle from given <computeroutput>ref</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para>$p(\omega) = \left(\frac{\mathrm d \omega}{\mathrm d x}\right) ^ {-1} p(x)$</para>
<para>$\mathrm d \omega = \mathrm d x \frac{|N(x) \cdot -\vec r|}{||\vec r|| ^ 2}$ where $\vec r = x - \text{ref}.x$</para>
<para>$\Longrightarrow p(\omega) = \frac{||\vec r|| ^ 2}{|N(x) \cdot -\vec r|}p(x)$</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>reference point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>random sample </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdf</parametername>
</parameternamelist>
<parameterdescription>
<para>pdf </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="93" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Shape_1ae1c6ed9269dc96d83b38a0f9a2cb4aa2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>virtual float dakku::Shape::pdfDirection</definition>
        <argsstring>(const Interaction &amp;ref, const Vector3f &amp;wi) const</argsstring>
        <name>pdfDirection</name>
        <param>
          <type>const <ref refid="structdakku_1_1Interaction" kindref="compound">Interaction</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1aa12b2f1fc9684bf8ba7fbf5b600685c6" kindref="member">Vector3f</ref> &amp;</type>
          <declname>wi</declname>
        </param>
        <briefdescription>
<para>the pdf of sampling a point on the shape with respect to the area of the surface </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the ref point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wi</parametername>
</parameternamelist>
<parameterdescription>
<para>direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/shape.h" line="103" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dakku::Object</label>
        <link refid="classdakku_1_1Object"/>
      </node>
      <node id="1">
        <label>dakku::Shape</label>
        <link refid="classdakku_1_1Shape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dakku::Object</label>
        <link refid="classdakku_1_1Object"/>
      </node>
      <node id="1">
        <label>dakku::Shape</label>
        <link refid="classdakku_1_1Shape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>objectToWorld</edgelabel>
          <edgelabel>worldToObject</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>dakku::Transform</label>
        <link refid="classdakku_1_1Transform"/>
      </node>
    </collaborationgraph>
    <location file="src/core/shape.h" line="9" column="1" bodyfile="src/core/shape.h" bodystart="9" bodyend="108"/>
    <listofallmembers>
      <member refid="classdakku_1_1Shape_1adfc5caa3d24760f7f76db43b343be1d3" prot="public" virt="pure-virtual"><scope>dakku::Shape</scope><name>area</name></member>
      <member refid="classdakku_1_1Shape_1aac110048040df95b607cc505ad2eb218" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>DAKKU_DECLARE_OBJECT</name></member>
      <member refid="classdakku_1_1Object_1a543f734268f7be81badecee6cf7245cc" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>getClassName</name></member>
      <member refid="classdakku_1_1Object_1a247ed68865f464d511b7fdb85467c354" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>getClassNameStatic</name></member>
      <member refid="classdakku_1_1Object_1accec0632e79097564677055bef4220bd" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>getParentName</name></member>
      <member refid="classdakku_1_1Object_1a08ec83c660afb1850455ef30c43fa29c" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>getParentNameStatic</name></member>
      <member refid="classdakku_1_1Shape_1aabda589a8380ec7b9f48c03693de58df" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>hasIntersection</name></member>
      <member refid="classdakku_1_1Shape_1a8994ddc5864708868642720c2561a179" prot="public" virt="pure-virtual"><scope>dakku::Shape</scope><name>intersect</name></member>
      <member refid="classdakku_1_1Object_1a055e32b0624d9a96fc2014fe5d9d0c81" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>isBaseOf</name></member>
      <member refid="classdakku_1_1Object_1add47b28fc1878f008bb6664a83faad72" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>isDerivedFrom</name></member>
      <member refid="classdakku_1_1Object_1a20e78d46fa11d575d63e048279150eac" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>Object</name></member>
      <member refid="classdakku_1_1Shape_1a5a9fd700c1e56cf18784384ba0eeb5e0" prot="public" virt="pure-virtual"><scope>dakku::Shape</scope><name>objectBound</name></member>
      <member refid="classdakku_1_1Shape_1af14c5ad6380191698502a5b6ebfe30fe" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>objectToWorld</name></member>
      <member refid="classdakku_1_1Shape_1ae1c6ed9269dc96d83b38a0f9a2cb4aa2" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>pdfDirection</name></member>
      <member refid="classdakku_1_1Shape_1a350c4ead757cc7b6caefc91829ed0eff" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>pdfPosition</name></member>
      <member refid="classdakku_1_1Shape_1a78022e0a960761b2ef450dc049cd9dc5" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>sampleDirection</name></member>
      <member refid="classdakku_1_1Shape_1a2ab207143d959280b029b464d7ba18e7" prot="public" virt="pure-virtual"><scope>dakku::Shape</scope><name>samplePosition</name></member>
      <member refid="classdakku_1_1Shape_1acb5e66e646d6fd0709ef4b8d6179142f" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>Shape</name></member>
      <member refid="classdakku_1_1Shape_1aa36bbef60c9caa01503d5fd50f47388a" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>Shape</name></member>
      <member refid="classdakku_1_1Object_1a65d91c04e480b827fa495df96af2826b" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>toString</name></member>
      <member refid="classdakku_1_1Shape_1aad943a4507cb9b01f0103981c847e19b" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>transformSwapsHandedness</name></member>
      <member refid="classdakku_1_1Shape_1ad7d19f6b59f7cb7e333a43d3f0eaacf8" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>worldBound</name></member>
      <member refid="classdakku_1_1Shape_1ac1c407215b941bade1fb229e74c58d2f" prot="public" virt="non-virtual"><scope>dakku::Shape</scope><name>worldToObject</name></member>
      <member refid="classdakku_1_1Object_1a0c792f089351caf3fa7a704c86ce903d" prot="public" virt="virtual"><scope>dakku::Shape</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
