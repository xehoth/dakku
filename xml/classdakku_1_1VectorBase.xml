<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1VectorBase" kind="class" language="C++" prot="public">
    <compoundname>dakku::VectorBase</compoundname>
    <derivedcompoundref refid="classdakku_1_1Normal" prot="public" virt="non-virtual">dakku::Normal&lt; T, S, D &gt;</derivedcompoundref>
    <derivedcompoundref refid="classdakku_1_1Point" prot="public" virt="non-virtual">dakku::Point&lt; T, S, D &gt;</derivedcompoundref>
    <derivedcompoundref refid="classdakku_1_1Vector" prot="public" virt="non-virtual">dakku::Vector&lt; T, S, D &gt;</derivedcompoundref>
    <includes refid="vector__base_8h" local="no">vector_base.h</includes>
    <templateparamlist>
      <param>
        <type>ArithmeticType</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>S</declname>
        <defname>S</defname>
      </param>
      <param>
        <type>typename D</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdakku_1_1VectorBase_1aba40d32d76144c345f1b8d38574e3e24" prot="private" static="no" mutable="no">
        <type>std::array&lt; T, S &gt;</type>
        <definition>std::array&lt;T, S&gt; dakku::VectorBase&lt; T, S, D &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <briefdescription>
<para>vector base data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="465" column="14" bodyfile="src/core/vector_base.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a75875fb982e9119e088a8041633af986" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>()</argsstring>
        <name>VectorBase</name>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref> Base object all components initialized to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="25" column="3" bodyfile="src/core/vector_base.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1af3bdbf112b98808eef281aca3cb82206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>Arg</declname>
            <defname>Arg</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>(Arg value)</argsstring>
        <name>VectorBase</name>
        <param>
          <type>Arg</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref> Base object all components initalized to <computeroutput>value</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>init value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="35" column="3" bodyfile="src/core/vector_base.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a9c402092a7e88ec0a81f0c7ee5cecc53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>(const sol::table &amp;table)</argsstring>
        <name>VectorBase</name>
        <param>
          <type>const sol::table &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref> Base object all components initalized to table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="45" column="3" bodyfile="src/core/vector_base.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a702d9c09e3ad9c268125e98e50fc0f4f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>Other</declname>
            <defname>Other</defname>
          </param>
          <param>
            <type>typename OtherDerived</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>(const VectorBase&lt; Other, S, OtherDerived &gt; &amp;other)</argsstring>
        <name>VectorBase</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; Other, S, OtherDerived &gt; &amp;</type>
          <declname>other</declname>
        </param>
    <requiresclause>(sizeof...(Args) == S) VectorBase(Args &amp;&amp;...args)    </requiresclause>
        <briefdescription>
<para>Construct a new <ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref> Base object with given values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>value types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>init values</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Construct a new <ref refid="classdakku_1_1Vector" kindref="compound">Vector</ref> Base object with a vector expression</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Other</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OtherDerived</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Expr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>the given expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="70" column="12" bodyfile="src/core/vector_base.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a2249aa0c050aa9a892a579252416082a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>(const VectorBase &amp;other)</argsstring>
        <name>VectorBase</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="75" column="3" bodyfile="src/core/vector_base.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a538605b55d14d6a8e69195986963fc6d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::VectorBase&lt; T, S, D &gt;::VectorBase</definition>
        <argsstring>(VectorBase &amp;&amp;other) noexcept</argsstring>
        <name>VectorBase</name>
        <param>
          <type><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="78" column="3" bodyfile="src/core/vector_base.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a8f976fa3ab9629fe2b353acbd6fe16e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;</type>
        <definition>VectorBase &amp; dakku::VectorBase&lt; T, S, D &gt;::operator=</definition>
        <argsstring>(const VectorBase &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="81" column="14" bodyfile="src/core/vector_base.h" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a7c61321e47d9bf792afe038cc7a466a8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;</type>
        <definition>VectorBase &amp; dakku::VectorBase&lt; T, S, D &gt;::operator=</definition>
        <argsstring>(VectorBase &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="87" column="14" bodyfile="src/core/vector_base.h" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1aaa5d8d3dd53cf5a2bbae02fcac4cad8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const D &amp;</type>
        <definition>const D &amp; dakku::VectorBase&lt; T, S, D &gt;::derived</definition>
        <argsstring>() const</argsstring>
        <name>derived</name>
        <briefdescription>
<para>convert to derived type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="98" column="11" bodyfile="src/core/vector_base.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1ac6c6eeb7cdf5c8075b9ef313623325e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::derived</definition>
        <argsstring>()</argsstring>
        <name>derived</name>
        <briefdescription>
<para>convert to derived type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="104" column="5" bodyfile="src/core/vector_base.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a95e25d9c0c9fba8ec21479e52fd932de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>Arg</declname>
            <defname>Arg</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::VectorBase&lt; T, S, D &gt;::set</definition>
        <argsstring>(Arg value)</argsstring>
        <name>set</name>
        <param>
          <type>Arg</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>set all components to <computeroutput>value</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="115" column="8" bodyfile="src/core/vector_base.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1aa5e9b54dd454a15190cb47ef6dddc9af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>Arg</declname>
            <defname>Arg</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::VectorBase&lt; T, S, D &gt;::set_by_index</definition>
        <argsstring>(size_t index, Arg value)</argsstring>
        <name>set_by_index</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Arg</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>set data[index] to value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the given value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="127" column="8" bodyfile="src/core/vector_base.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a0a45c53640e7e066f3d8043811e2e920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::VectorBase&lt; T, S, D &gt;::set</definition>
        <argsstring>(std::index_sequence&lt; Is... &gt;, Args &amp;&amp;...args)</argsstring>
        <name>set</name>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(sizeof...(Args) == S)    </requiresclause>
        <briefdescription>
<para>set data to args </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>value types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Is</parametername>
</parameternamelist>
<parameterdescription>
<para>indices (generated by std::index_sequence_for) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="141" column="9" bodyfile="src/core/vector_base.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1ace755d8042dd022c0695c531c854344f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::VectorBase&lt; T, S, D &gt;::set</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>set</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(sizeof...(Args) == S)    </requiresclause>
        <briefdescription>
<para>set data to args </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>value types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="153" column="9" bodyfile="src/core/vector_base.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a458e8e62a05e6576794214a047209501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>Other</declname>
            <defname>Other</defname>
          </param>
          <param>
            <type>typename OtherDerived</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dakku::VectorBase&lt; T, S, D &gt;::set</definition>
        <argsstring>(const VectorBase&lt; Other, S, OtherDerived &gt; &amp;rhs)</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref>&lt; Other, S, OtherDerived &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>set data by <computeroutput>rhs</computeroutput>&apos;s data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Other</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>rhs</computeroutput> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OtherDerived</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>rhs</computeroutput> derived type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the given vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="165" column="8" bodyfile="src/core/vector_base.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1ad345b5adb85ffb7a09a1494e4cbf9cde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; dakku::VectorBase&lt; T, S, D &gt;::get</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>get</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>get i&apos;th component </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="175" column="11" bodyfile="src/core/vector_base.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a11976058f3dd1bc750f00d3a34a75968" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t dakku::VectorBase&lt; T, S, D &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>size of the vector </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="185" column="11" bodyfile="src/core/vector_base.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a118a9c7d9ffa23805af2c2e5fb4f0a0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dakku::VectorBase&lt; T, S, D &gt;::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
<para>convert vector to string </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the converted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="192" column="16" bodyfile="src/core/vector_base.h" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a984bee52aac6c08519e052b0a62ded44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::VectorBase&lt; T, S, D &gt;::has_nans</definition>
        <argsstring>() const</argsstring>
        <name>has_nans</name>
        <briefdescription>
<para>check whether there are nan components </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true vector contains nan </para>
</simplesect>
<simplesect kind="return"><para>false vector does not contain nans </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="207" column="9" bodyfile="src/core/vector_base.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a85bd8a9c509a3c7149824f3bca29810f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
<para>get a copy </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="216" column="5" bodyfile="src/core/vector_base.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a6e532dd029e2386515b0e6047a6e6866" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; dakku::VectorBase&lt; T, S, D &gt;::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>get i&apos;th value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="224" column="11" bodyfile="src/core/vector_base.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a4638de6bd39666b4a7af36f157b62261" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; dakku::VectorBase&lt; T, S, D &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>get i&apos;th value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="232" column="5" bodyfile="src/core/vector_base.h" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a7c41aa6431258fad65b506af8171df0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator+=</definition>
        <argsstring>(const D &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>addition </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="242" column="5" bodyfile="src/core/vector_base.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a5c8ad5f1742dc0f2fe4b73430e90c119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator+=</definition>
        <argsstring>(V rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>addition </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="254" column="5" bodyfile="src/core/vector_base.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a3ad97c8cd07eed945e3889dfaefd6c63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator+</definition>
        <argsstring>(const D &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>addition </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="265" column="5" bodyfile="src/core/vector_base.h" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a001bb398b96aae4135cfee98ba5259b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator+</definition>
        <argsstring>(V rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>addition </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="278" column="5" bodyfile="src/core/vector_base.h" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a65aec7973da5728caec270d91e51e399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator-=</definition>
        <argsstring>(const D &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>subtraction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="302" column="5" bodyfile="src/core/vector_base.h" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1ab11c62c5e8c7e5dae9d64cb4a8e144f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator-=</definition>
        <argsstring>(V rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>subtraction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="314" column="5" bodyfile="src/core/vector_base.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1abbfbc3bb4987be30346848dfbc0372ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator*=</definition>
        <argsstring>(const D &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>multiplication </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="339" column="5" bodyfile="src/core/vector_base.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a878b656fc1b35eaa5b95e4cb673c15a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator*=</definition>
        <argsstring>(V rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>multiplication </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="351" column="5" bodyfile="src/core/vector_base.h" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a94f4b24cbd5c7feaf4066a9e894d8a72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator*</definition>
        <argsstring>(const D &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>multiplication </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="362" column="5" bodyfile="src/core/vector_base.h" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a63d725a6dddd8312eccabb215b9893a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator*</definition>
        <argsstring>(V rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>multiplication </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="375" column="5" bodyfile="src/core/vector_base.h" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1a0a520b5f77010cdeef2f9beb2b053349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator/=</definition>
        <argsstring>(const D &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>division </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="399" column="5" bodyfile="src/core/vector_base.h" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1aa6a95ff2d4d223c4481873bbf3896039" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>D &amp;</type>
        <definition>D &amp; dakku::VectorBase&lt; T, S, D &gt;::operator/=</definition>
        <argsstring>(V rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>V</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>division </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="411" column="5" bodyfile="src/core/vector_base.h" bodystart="411" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1aff2b2b32f14b1bf96bf233549bad1dca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator/</definition>
        <argsstring>(const D &amp;rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const D &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>division </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>another vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="421" column="5" bodyfile="src/core/vector_base.h" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1VectorBase_1aa6a930e0cb5c2acbcaaf605a8dea115e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D dakku::VectorBase&lt; T, S, D &gt;::operator/</definition>
        <argsstring>(U rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>U</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>division </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="434" column="5" bodyfile="src/core/vector_base.h" bodystart="434" bodyend="438"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdakku_1_1VectorBase_1a134cfc3963f540464c94205f742b29bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D operator+</definition>
        <argsstring>(U a, const D &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>U</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>addition </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>a</parametertype>
<parametername>$a</parametername>
<parametertype>a</parametertype>
<parametername>$</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elementwise add a </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="292" column="12" bodyfile="src/core/vector_base.h" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="friend" id="classdakku_1_1VectorBase_1a2b6a039c78a601cd7704d57ff1169d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D operator-</definition>
        <argsstring>(U a, const D &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>U</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>subtraction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>a</parametertype>
<parametername>$a</parametername>
<parametertype>a</parametertype>
<parametername>$</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elementwise sub </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="327" column="12" bodyfile="src/core/vector_base.h" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="friend" id="classdakku_1_1VectorBase_1ae86ea43d8aa945505be5032018751b34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D operator*</definition>
        <argsstring>(U a, const D &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>U</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>multiplication </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>a</parametertype>
<parametername>$a</parametername>
<parametertype>a</parametertype>
<parametername>$</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elementwise mul </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="389" column="12" bodyfile="src/core/vector_base.h" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="friend" id="classdakku_1_1VectorBase_1a9bb674f8e431d95d1f2388d28519472b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>ArithmeticType</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D operator/</definition>
        <argsstring>(U a, const D &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>U</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>division </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>a</parametertype>
<parametername>$a</parametername>
<parametertype>a</parametertype>
<parametername>$</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>$\vec b$ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elementwise div (broad cast $a$) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="448" column="12" bodyfile="src/core/vector_base.h" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="friend" id="classdakku_1_1VectorBase_1a531ed133257631916fc3384392b2ab7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const VectorBase &amp;vec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classdakku_1_1VectorBase" kindref="compound">VectorBase</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>output the vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>ostream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ostream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/vector_base.h" line="459" column="10" bodyfile="src/core/vector_base.h" bodystart="459" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>vector base </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para>derived </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dakku::Normal&lt; T, S, D &gt;</label>
        <link refid="classdakku_1_1Normal"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>dakku::Point&lt; T, S, D &gt;</label>
        <link refid="classdakku_1_1Point"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>dakku::Vector&lt; T, S, D &gt;</label>
        <link refid="classdakku_1_1Vector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dakku::VectorBase&lt; T, S, D &gt;</label>
        <link refid="classdakku_1_1VectorBase"/>
      </node>
    </inheritancegraph>
    <location file="src/core/vector_base.h" line="18" column="1" bodyfile="src/core/vector_base.h" bodystart="18" bodyend="466"/>
    <listofallmembers>
      <member refid="classdakku_1_1VectorBase_1aba40d32d76144c345f1b8d38574e3e24" prot="private" virt="non-virtual"><scope>dakku::VectorBase</scope><name>_data</name></member>
      <member refid="classdakku_1_1VectorBase_1a85bd8a9c509a3c7149824f3bca29810f" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>clone</name></member>
      <member refid="classdakku_1_1VectorBase_1aaa5d8d3dd53cf5a2bbae02fcac4cad8c" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>derived</name></member>
      <member refid="classdakku_1_1VectorBase_1ac6c6eeb7cdf5c8075b9ef313623325e6" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>derived</name></member>
      <member refid="classdakku_1_1VectorBase_1ad345b5adb85ffb7a09a1494e4cbf9cde" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>get</name></member>
      <member refid="classdakku_1_1VectorBase_1a984bee52aac6c08519e052b0a62ded44" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>has_nans</name></member>
      <member refid="classdakku_1_1VectorBase_1a94f4b24cbd5c7feaf4066a9e894d8a72" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator*</name></member>
      <member refid="classdakku_1_1VectorBase_1a63d725a6dddd8312eccabb215b9893a2" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator*</name></member>
      <member refid="classdakku_1_1VectorBase_1ae86ea43d8aa945505be5032018751b34" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator*</name></member>
      <member refid="classdakku_1_1VectorBase_1abbfbc3bb4987be30346848dfbc0372ea" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator*=</name></member>
      <member refid="classdakku_1_1VectorBase_1a878b656fc1b35eaa5b95e4cb673c15a3" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator*=</name></member>
      <member refid="classdakku_1_1VectorBase_1a3ad97c8cd07eed945e3889dfaefd6c63" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator+</name></member>
      <member refid="classdakku_1_1VectorBase_1a001bb398b96aae4135cfee98ba5259b3" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator+</name></member>
      <member refid="classdakku_1_1VectorBase_1a134cfc3963f540464c94205f742b29bd" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator+</name></member>
      <member refid="classdakku_1_1VectorBase_1a7c41aa6431258fad65b506af8171df0c" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator+=</name></member>
      <member refid="classdakku_1_1VectorBase_1a5c8ad5f1742dc0f2fe4b73430e90c119" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator+=</name></member>
      <member refid="classdakku_1_1VectorBase_1a2b6a039c78a601cd7704d57ff1169d99" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator-</name></member>
      <member refid="classdakku_1_1VectorBase_1a65aec7973da5728caec270d91e51e399" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator-=</name></member>
      <member refid="classdakku_1_1VectorBase_1ab11c62c5e8c7e5dae9d64cb4a8e144f4" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator-=</name></member>
      <member refid="classdakku_1_1VectorBase_1aff2b2b32f14b1bf96bf233549bad1dca" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator/</name></member>
      <member refid="classdakku_1_1VectorBase_1aa6a930e0cb5c2acbcaaf605a8dea115e" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator/</name></member>
      <member refid="classdakku_1_1VectorBase_1a9bb674f8e431d95d1f2388d28519472b" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator/</name></member>
      <member refid="classdakku_1_1VectorBase_1a0a520b5f77010cdeef2f9beb2b053349" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator/=</name></member>
      <member refid="classdakku_1_1VectorBase_1aa6a95ff2d4d223c4481873bbf3896039" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator/=</name></member>
      <member refid="classdakku_1_1VectorBase_1a531ed133257631916fc3384392b2ab7f" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator&lt;&lt;</name></member>
      <member refid="classdakku_1_1VectorBase_1a8f976fa3ab9629fe2b353acbd6fe16e6" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator=</name></member>
      <member refid="classdakku_1_1VectorBase_1a7c61321e47d9bf792afe038cc7a466a8" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator=</name></member>
      <member refid="classdakku_1_1VectorBase_1a6e532dd029e2386515b0e6047a6e6866" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator[]</name></member>
      <member refid="classdakku_1_1VectorBase_1a4638de6bd39666b4a7af36f157b62261" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>operator[]</name></member>
      <member refid="classdakku_1_1VectorBase_1a95e25d9c0c9fba8ec21479e52fd932de" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>set</name></member>
      <member refid="classdakku_1_1VectorBase_1a0a45c53640e7e066f3d8043811e2e920" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>set</name></member>
      <member refid="classdakku_1_1VectorBase_1ace755d8042dd022c0695c531c854344f" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>set</name></member>
      <member refid="classdakku_1_1VectorBase_1a458e8e62a05e6576794214a047209501" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>set</name></member>
      <member refid="classdakku_1_1VectorBase_1aa5e9b54dd454a15190cb47ef6dddc9af" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>set_by_index</name></member>
      <member refid="classdakku_1_1VectorBase_1a11976058f3dd1bc750f00d3a34a75968" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>size</name></member>
      <member refid="classdakku_1_1VectorBase_1a118a9c7d9ffa23805af2c2e5fb4f0a0f" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>to_string</name></member>
      <member refid="classdakku_1_1VectorBase_1a75875fb982e9119e088a8041633af986" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
      <member refid="classdakku_1_1VectorBase_1af3bdbf112b98808eef281aca3cb82206" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
      <member refid="classdakku_1_1VectorBase_1a9c402092a7e88ec0a81f0c7ee5cecc53" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
      <member refid="classdakku_1_1VectorBase_1a702d9c09e3ad9c268125e98e50fc0f4f" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
      <member refid="classdakku_1_1VectorBase_1a2249aa0c050aa9a892a579252416082a" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
      <member refid="classdakku_1_1VectorBase_1a538605b55d14d6a8e69195986963fc6d" prot="public" virt="non-virtual"><scope>dakku::VectorBase</scope><name>VectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
