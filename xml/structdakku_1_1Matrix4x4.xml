<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structdakku_1_1Matrix4x4" kind="struct" language="C++" prot="public">
    <compoundname>dakku::Matrix4x4</compoundname>
    <includes refid="transform_8h" local="no">transform.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" prot="public" static="no" mutable="no">
        <type>std::array&lt; std::array&lt; float, 4 &gt;, 4 &gt;</type>
        <definition>std::array&lt;std::array&lt;float, 4&gt;, 4&gt; dakku::Matrix4x4::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
<para>matrix data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="98" column="14" bodyfile="src/core/transform.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a04ffa0470a01980b11bd71b15a698fa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::Matrix4x4::Matrix4x4</definition>
        <argsstring>()</argsstring>
        <name>Matrix4x4</name>
        <briefdescription>
<para>Construct a new Matrix 4 x 4 object (default identity matrix) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="16" column="3" bodyfile="src/core/transform.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a9969de4e8ca980efbe5adde6d7f9b80c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::Matrix4x4::Matrix4x4</definition>
        <argsstring>(float t00, float t01, float t02, float t03, float t10, float t11, float t12, float t13, float t20, float t21, float t22, float t23, float t30, float t31, float t32, float t33)</argsstring>
        <name>Matrix4x4</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
<para>Construct a new Matrix 4 x 4 object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="22" column="3" bodyfile="src/core/transform.h" bodystart="22" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1afa2d87deca31076d5166d3c5335e8e22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::Matrix4x4::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="43" column="12" bodyfile="src/core/transform.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1adbd9aa389d5861cbb9961db9ea21b219" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) dakku::Matrix4x4::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="44" column="12" bodyfile="src/core/transform.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a23f75e2553126934f408f117eaed9849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dakku::Matrix4x4::setIdentity</definition>
        <argsstring>()</argsstring>
        <name>setIdentity</name>
        <briefdescription>
<para>set identity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="50" column="8" bodyfile="src/core/transform.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1aa440eb3fd11ed3003aad440b17e84e5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Matrix4x4::operator==</definition>
        <argsstring>(const Matrix4x4 &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="56" column="8" bodyfile="src/core/transform.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a5b55b6346b398a8dac63fbcb0f873375" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Matrix4x4::operator!=</definition>
        <argsstring>(const Matrix4x4 &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="58" column="8" bodyfile="src/core/transform.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a0a2e0854eec31d6d12a8c3757cd1a7c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref></type>
        <definition>Matrix4x4 dakku::Matrix4x4::operator*</definition>
        <argsstring>(const Matrix4x4 &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="62" column="13" bodyfile="src/core/transform.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a1f503531ba9a7dc39f0fc8124aa2d778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref></type>
        <definition>Matrix4x4 dakku::Matrix4x4::operator*=</definition>
        <argsstring>(const Matrix4x4 &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="64" column="13" bodyfile="src/core/transform.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1af28df8d5712634ebdec64eebcc804bde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dakku::Matrix4x4::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="81" column="16" bodyfile="src/core/transform.h" bodystart="81" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structdakku_1_1Matrix4x4_1a842b9884e102b87cb20746608fb04aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref></type>
        <definition>static Matrix4x4 dakku::Matrix4x4::mul</definition>
        <argsstring>(const Matrix4x4 &amp;a, const Matrix4x4 &amp;b)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="60" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structdakku_1_1Matrix4x4_1ad9179852977de8383c0ae1683f12fc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>Matrix4x4 DAKKU_EXPORT_CORE transpose</definition>
        <argsstring>(const Matrix4x4 &amp;m)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>transpose of the matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="73" column="38"/>
      </memberdef>
      <memberdef kind="friend" id="structdakku_1_1Matrix4x4_1ac742caf08472cdfeda8fce5abf75c6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> <ref refid="fwd_8h_1ab23d79fec91df808d83b4f132f77eb56" kindref="member">DAKKU_EXPORT_CORE</ref></type>
        <definition>Matrix4x4 DAKKU_EXPORT_CORE inverse</definition>
        <argsstring>(const Matrix4x4 &amp;m)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>get the inverse matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="79" column="38"/>
      </memberdef>
      <memberdef kind="friend" id="structdakku_1_1Matrix4x4_1a014300d3c91b6eea30d2c2e20f5d08ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Matrix4x4 &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structdakku_1_1Matrix4x4" kindref="compound">Matrix4x4</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/transform.h" line="93" column="10" bodyfile="src/core/transform.h" bodystart="93" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>4x4 matrix </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/transform.h" line="11" column="1" bodyfile="src/core/transform.h" bodystart="11" bodyend="99"/>
    <listofallmembers>
      <member refid="structdakku_1_1Matrix4x4_1ac742caf08472cdfeda8fce5abf75c6a9" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>inverse</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a3580dce7dc2c230e59203cecd2760635" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>m</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a04ffa0470a01980b11bd71b15a698fa0" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>Matrix4x4</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a9969de4e8ca980efbe5adde6d7f9b80c" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>Matrix4x4</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a842b9884e102b87cb20746608fb04aa2" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>mul</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a5b55b6346b398a8dac63fbcb0f873375" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator!=</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a0a2e0854eec31d6d12a8c3757cd1a7c0" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator*</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a1f503531ba9a7dc39f0fc8124aa2d778" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator*=</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a014300d3c91b6eea30d2c2e20f5d08ab" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator&lt;&lt;</name></member>
      <member refid="structdakku_1_1Matrix4x4_1aa440eb3fd11ed3003aad440b17e84e5c" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator==</name></member>
      <member refid="structdakku_1_1Matrix4x4_1afa2d87deca31076d5166d3c5335e8e22" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator[]</name></member>
      <member refid="structdakku_1_1Matrix4x4_1adbd9aa389d5861cbb9961db9ea21b219" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>operator[]</name></member>
      <member refid="structdakku_1_1Matrix4x4_1a23f75e2553126934f408f117eaed9849" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>setIdentity</name></member>
      <member refid="structdakku_1_1Matrix4x4_1af28df8d5712634ebdec64eebcc804bde" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>toString</name></member>
      <member refid="structdakku_1_1Matrix4x4_1ad9179852977de8383c0ae1683f12fc5f" prot="public" virt="non-virtual"><scope>dakku::Matrix4x4</scope><name>transpose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
