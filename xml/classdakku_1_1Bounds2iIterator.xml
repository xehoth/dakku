<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classdakku_1_1Bounds2iIterator" kind="class" language="C++" prot="public">
    <compoundname>dakku::Bounds2iIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::forward_iterator_tag</basecompoundref>
    <includes refid="bounds_8h" local="no">bounds.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdakku_1_1Bounds2iIterator_1a25db7490f2d16d4ce72ad2701535ffae" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
        <definition>const Bounds2i&amp; dakku::Bounds2iIterator::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="240" column="18" bodyfile="src/core/bounds.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdakku_1_1Bounds2iIterator_1a03a906289f14103e080bc463642aeba3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref></type>
        <definition>Point2i dakku::Bounds2iIterator::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="241" column="11" bodyfile="src/core/bounds.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1a95130c6902beb884ee28da0e632ca660" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dakku::Bounds2iIterator::Bounds2iIterator</definition>
        <argsstring>(const Bounds2i &amp;b, const Point2i &amp;p)</argsstring>
        <name>Bounds2iIterator</name>
        <param>
          <type>const <ref refid="namespacedakku_1ae2cd423e1acf2fd91f4cdf3cc5ad50c6" kindref="member">Bounds2i</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="208" column="12" bodyfile="src/core/bounds.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1ad19c79cc44f5407ffedd8fee2e74b873" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::Bounds2iIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="210" column="20" bodyfile="src/core/bounds.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1abba748bffd9de14381de7393279e0ab1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref></type>
        <definition>Bounds2iIterator dakku::Bounds2iIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="215" column="20" bodyfile="src/core/bounds.h" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1aabbc42d3b83e2b025e1a8540ff62314b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Bounds2iIterator::operator==</definition>
        <argsstring>(const Bounds2iIterator &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="221" column="8" bodyfile="src/core/bounds.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1aec365c1c605c7f12c463b13668a6fa5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dakku::Bounds2iIterator::operator!=</definition>
        <argsstring>(const Bounds2iIterator &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdakku_1_1Bounds2iIterator" kindref="compound">Bounds2iIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="225" column="8" bodyfile="src/core/bounds.h" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1a6b917d1a9e146470819a369ee789c65d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacedakku_1a059653c441fcfa28e3b00de3709176e9" kindref="member">Point2i</ref></type>
        <definition>Point2i dakku::Bounds2iIterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="229" column="11" bodyfile="src/core/bounds.h" bodystart="229" bodyend="229"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdakku_1_1Bounds2iIterator_1aa30d8017ae278532454b1dacf52d1807" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dakku::Bounds2iIterator::advance</definition>
        <argsstring>()</argsstring>
        <name>advance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/bounds.h" line="232" column="8" bodyfile="src/core/bounds.h" bodystart="232" bodyend="238"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>2d integer bounds iterator, iterate all pixels inside </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dakku::Bounds2iIterator</label>
        <link refid="classdakku_1_1Bounds2iIterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::forward_iterator_tag</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dakku::Bounds2iIterator</label>
        <link refid="classdakku_1_1Bounds2iIterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::forward_iterator_tag</label>
      </node>
    </collaborationgraph>
    <location file="src/core/bounds.h" line="206" column="1" bodyfile="src/core/bounds.h" bodystart="206" bodyend="242"/>
    <listofallmembers>
      <member refid="classdakku_1_1Bounds2iIterator_1aa30d8017ae278532454b1dacf52d1807" prot="private" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>advance</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1a25db7490f2d16d4ce72ad2701535ffae" prot="private" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>b</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1a95130c6902beb884ee28da0e632ca660" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>Bounds2iIterator</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1aec365c1c605c7f12c463b13668a6fa5b" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>operator!=</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1a6b917d1a9e146470819a369ee789c65d" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>operator*</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1ad19c79cc44f5407ffedd8fee2e74b873" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>operator++</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1abba748bffd9de14381de7393279e0ab1" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>operator++</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1aabbc42d3b83e2b025e1a8540ff62314b" prot="public" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>operator==</name></member>
      <member refid="classdakku_1_1Bounds2iIterator_1a03a906289f14103e080bc463642aeba3" prot="private" virt="non-virtual"><scope>dakku::Bounds2iIterator</scope><name>p</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
